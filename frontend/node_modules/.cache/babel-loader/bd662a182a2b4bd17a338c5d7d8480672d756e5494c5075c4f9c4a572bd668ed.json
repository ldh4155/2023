{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\2023TeamProject\\\\graduate\\\\frontend\\\\src\\\\page\\\\comment\\\\Comment.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport CommentWrite from \"./CommentWrite\";\nimport { api } from \"../../api/api\";\nimport { decodeJwt } from \"../../api/decodeJwt\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Comment = ({\n  boardId,\n  comments\n}) => {\n  _s();\n  const [commentList, setCommentList] = useState(comments);\n  const [visible, setVisible] = useState(10);\n  const [editingId, setEditingId] = useState(null);\n  const [editComment, setEditComment] = useState({\n    id: null,\n    content: \"\"\n  });\n  const myId = decodeJwt();\n  useEffect(() => {\n    setCommentList(comments);\n  }, [comments]);\n  const showMore = () => {\n    setVisible(prevValue => prevValue + 10);\n  };\n  const deleteComment = async id => {\n    try {\n      await api.delete(`board/${boardId}/comment/${id}`);\n      alert(\"삭제 성공\");\n      const newComments = commentList.filter(comment => comment.id !== id);\n      setCommentList(newComments);\n    } catch {\n      alert(\"삭제 실패\");\n    }\n  };\n  const updateComment = async () => {\n    try {\n      const response = await api.put(`board/${boardId}/comment`, editComment);\n      setCommentList(commentList.map(comment => comment.id === response.data.id ? response.data : comment));\n      setEditingId(null);\n      setEditComment({\n        id: null,\n        content: \"\"\n      });\n      alert(\"수정 성공\");\n    } catch (error) {\n      console.error(error);\n      alert(\"수정 실패\");\n    }\n  };\n  const handleEditClick = id => {\n    const commentToEdit = commentList.find(comment => comment.id === id);\n    setEditingId(id);\n    setEditComment({\n      id: id,\n      content: commentToEdit.content\n    });\n  };\n  const newComment = newComment => {\n    setCommentList([...commentList, newComment]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CommentWrite, {\n      boardId: boardId,\n      newComment: newComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uB313\\uAE00\\xA0\", commentList.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), commentList.slice(0, visible).map(comment => editingId === comment.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: editComment.content,\n          onChange: e => setEditComment({\n            id: editingId,\n            content: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: updateComment,\n          children: \"\\uC800\\uC7A5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: comment.memberNickName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 29\n        }, this), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: comment.createTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }, this), \"\\xA0\", comment.memberId === myId && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEditClick(comment.id),\n            children: \"\\uC218\\uC815\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 37\n          }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteComment(comment.id),\n            children: \"\\uC0AD\\uC81C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 29\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }, this)), visible < commentList.length && /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: showMore,\n        children: \"\\uB354\\uBCF4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n_s(Comment, \"s4Hg0CUWuOX1Jko0v2647IPyuJI=\");\n_c = Comment;\nexport default Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["React","useState","useEffect","CommentWrite","api","decodeJwt","jsxDEV","_jsxDEV","Fragment","_Fragment","Comment","boardId","comments","_s","commentList","setCommentList","visible","setVisible","editingId","setEditingId","editComment","setEditComment","id","content","myId","showMore","prevValue","deleteComment","delete","alert","newComments","filter","comment","updateComment","response","put","map","data","error","console","handleEditClick","commentToEdit","find","newComment","children","fileName","_jsxFileName","lineNumber","columnNumber","length","slice","type","value","onChange","e","target","onClick","memberNickName","createTime","memberId","_c","$RefreshReg$"],"sources":["C:/Users/user/2023TeamProject/graduate/frontend/src/page/comment/Comment.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport CommentWrite from \"./CommentWrite\";\r\nimport { api } from \"../../api/api\";\r\nimport { decodeJwt } from \"../../api/decodeJwt\";\r\n\r\nconst Comment = ({ boardId, comments }) => {\r\n\r\n    const [commentList, setCommentList] = useState(comments);\r\n    const [visible, setVisible] = useState(10);\r\n    const [editingId, setEditingId] = useState(null);\r\n    const [editComment, setEditComment] = useState({\r\n        id: null,\r\n        content: \"\"\r\n    });\r\n    const myId = decodeJwt();\r\n\r\n    useEffect(() => {\r\n        setCommentList(comments);\r\n    }, [comments]);\r\n\r\n    const showMore = () => {\r\n        setVisible((prevValue) => prevValue + 10);\r\n    };\r\n\r\n    const deleteComment = async (id) => {\r\n        try {\r\n            await api.delete(`board/${boardId}/comment/${id}`);\r\n            alert(\"삭제 성공\");\r\n\r\n            const newComments = commentList.filter(comment => comment.id !== id);\r\n\r\n            setCommentList(newComments);\r\n        } catch {\r\n            alert(\"삭제 실패\");\r\n        }\r\n    };\r\n\r\n    const updateComment = async () => {\r\n        try {\r\n            const response = await api.put(`board/${boardId}/comment`, editComment);\r\n            setCommentList(commentList.map(comment =>\r\n                comment.id === response.data.id ? response.data : comment));\r\n\r\n            setEditingId(null);\r\n            setEditComment({ id: null, content: \"\" });\r\n            alert(\"수정 성공\");\r\n        } catch (error) {\r\n            console.error(error);\r\n            alert(\"수정 실패\");\r\n        }\r\n    };\r\n\r\n    const handleEditClick = (id) => {\r\n        const commentToEdit = commentList.find(comment => comment.id === id);\r\n        setEditingId(id);\r\n        setEditComment({ id: id, content: commentToEdit.content });\r\n    };\r\n\r\n    const newComment = (newComment) => {\r\n        setCommentList([...commentList, newComment]);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <CommentWrite boardId={boardId} newComment={newComment} />\r\n            <div>\r\n                <p>댓글&nbsp;{commentList.length}</p>\r\n                {commentList.slice(0, visible).map((comment) =>\r\n                    editingId === comment.id ? (\r\n                        <div key={comment.id}>\r\n                            <input type=\"text\" value={editComment.content}\r\n                                onChange={(e) => setEditComment({ id: editingId, content: e.target.value })} />\r\n                            <button onClick={updateComment}>저장</button>\r\n                        </div>\r\n                    ) : (\r\n                        <div key={comment.id}>\r\n                            <span>{comment.memberNickName}</span>&nbsp;&nbsp;&nbsp;\r\n                            <span>{comment.createTime}</span>&nbsp;\r\n                            {comment.memberId === myId && (\r\n                                <>\r\n                                    <button onClick={() => handleEditClick(comment.id)}>수정</button>&nbsp;\r\n                                    <button onClick={() => deleteComment(comment.id)}>삭제</button>\r\n                                </>\r\n                            )}\r\n                            <p>{comment.content}</p>\r\n                        </div>\r\n                    ))}\r\n                {visible < commentList.length && (\r\n                    <p onClick={showMore}>더보기</p>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Comment;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,GAAG,QAAQ,eAAe;AACnC,SAASC,SAAS,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhD,MAAMC,OAAO,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAEvC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAACW,QAAQ,CAAC;EACxD,MAAM,CAACI,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACmB,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC;IAC3CqB,EAAE,EAAE,IAAI;IACRC,OAAO,EAAE;EACb,CAAC,CAAC;EACF,MAAMC,IAAI,GAAGnB,SAAS,CAAC,CAAC;EAExBH,SAAS,CAAC,MAAM;IACZa,cAAc,CAACH,QAAQ,CAAC;EAC5B,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMa,QAAQ,GAAGA,CAAA,KAAM;IACnBR,UAAU,CAAES,SAAS,IAAKA,SAAS,GAAG,EAAE,CAAC;EAC7C,CAAC;EAED,MAAMC,aAAa,GAAG,MAAOL,EAAE,IAAK;IAChC,IAAI;MACA,MAAMlB,GAAG,CAACwB,MAAM,CAAE,SAAQjB,OAAQ,YAAWW,EAAG,EAAC,CAAC;MAClDO,KAAK,CAAC,OAAO,CAAC;MAEd,MAAMC,WAAW,GAAGhB,WAAW,CAACiB,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACV,EAAE,KAAKA,EAAE,CAAC;MAEpEP,cAAc,CAACe,WAAW,CAAC;IAC/B,CAAC,CAAC,MAAM;MACJD,KAAK,CAAC,OAAO,CAAC;IAClB;EACJ,CAAC;EAED,MAAMI,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAM9B,GAAG,CAAC+B,GAAG,CAAE,SAAQxB,OAAQ,UAAS,EAAES,WAAW,CAAC;MACvEL,cAAc,CAACD,WAAW,CAACsB,GAAG,CAACJ,OAAO,IAClCA,OAAO,CAACV,EAAE,KAAKY,QAAQ,CAACG,IAAI,CAACf,EAAE,GAAGY,QAAQ,CAACG,IAAI,GAAGL,OAAO,CAAC,CAAC;MAE/Db,YAAY,CAAC,IAAI,CAAC;MAClBE,cAAc,CAAC;QAAEC,EAAE,EAAE,IAAI;QAAEC,OAAO,EAAE;MAAG,CAAC,CAAC;MACzCM,KAAK,CAAC,OAAO,CAAC;IAClB,CAAC,CAAC,OAAOS,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBT,KAAK,CAAC,OAAO,CAAC;IAClB;EACJ,CAAC;EAED,MAAMW,eAAe,GAAIlB,EAAE,IAAK;IAC5B,MAAMmB,aAAa,GAAG3B,WAAW,CAAC4B,IAAI,CAACV,OAAO,IAAIA,OAAO,CAACV,EAAE,KAAKA,EAAE,CAAC;IACpEH,YAAY,CAACG,EAAE,CAAC;IAChBD,cAAc,CAAC;MAAEC,EAAE,EAAEA,EAAE;MAAEC,OAAO,EAAEkB,aAAa,CAAClB;IAAQ,CAAC,CAAC;EAC9D,CAAC;EAED,MAAMoB,UAAU,GAAIA,UAAU,IAAK;IAC/B5B,cAAc,CAAC,CAAC,GAAGD,WAAW,EAAE6B,UAAU,CAAC,CAAC;EAChD,CAAC;EAED,oBACIpC,OAAA;IAAAqC,QAAA,gBACIrC,OAAA,CAACJ,YAAY;MAACQ,OAAO,EAAEA,OAAQ;MAACgC,UAAU,EAAEA;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1DzC,OAAA;MAAAqC,QAAA,gBACIrC,OAAA;QAAAqC,QAAA,GAAG,kBAAQ,EAAC9B,WAAW,CAACmC,MAAM;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAClClC,WAAW,CAACoC,KAAK,CAAC,CAAC,EAAElC,OAAO,CAAC,CAACoB,GAAG,CAAEJ,OAAO,IACvCd,SAAS,KAAKc,OAAO,CAACV,EAAE,gBACpBf,OAAA;QAAAqC,QAAA,gBACIrC,OAAA;UAAO4C,IAAI,EAAC,MAAM;UAACC,KAAK,EAAEhC,WAAW,CAACG,OAAQ;UAC1C8B,QAAQ,EAAGC,CAAC,IAAKjC,cAAc,CAAC;YAAEC,EAAE,EAAEJ,SAAS;YAAEK,OAAO,EAAE+B,CAAC,CAACC,MAAM,CAACH;UAAM,CAAC;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACnFzC,OAAA;UAAQiD,OAAO,EAAEvB,aAAc;UAAAW,QAAA,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAHrChB,OAAO,CAACV,EAAE;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIf,CAAC,gBAENzC,OAAA;QAAAqC,QAAA,gBACIrC,OAAA;UAAAqC,QAAA,EAAOZ,OAAO,CAACyB;QAAc;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,gBACrC,eAAAzC,OAAA;UAAAqC,QAAA,EAAOZ,OAAO,CAAC0B;QAAU;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,QACjC,EAAChB,OAAO,CAAC2B,QAAQ,KAAKnC,IAAI,iBACtBjB,OAAA,CAAAE,SAAA;UAAAmC,QAAA,gBACIrC,OAAA;YAAQiD,OAAO,EAAEA,CAAA,KAAMhB,eAAe,CAACR,OAAO,CAACV,EAAE,CAAE;YAAAsB,QAAA,EAAC;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,QAC/D,eAAAzC,OAAA;YAAQiD,OAAO,EAAEA,CAAA,KAAM7B,aAAa,CAACK,OAAO,CAACV,EAAE,CAAE;YAAAsB,QAAA,EAAC;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,eAC/D,CACL,eACDzC,OAAA;UAAAqC,QAAA,EAAIZ,OAAO,CAACT;QAAO;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GATlBhB,OAAO,CAACV,EAAE;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUf,CACR,CAAC,EACLhC,OAAO,GAAGF,WAAW,CAACmC,MAAM,iBACzB1C,OAAA;QAAGiD,OAAO,EAAE/B,QAAS;QAAAmB,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAC/B;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACnC,EAAA,CAxFIH,OAAO;AAAAkD,EAAA,GAAPlD,OAAO;AA0Fb,eAAeA,OAAO;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}