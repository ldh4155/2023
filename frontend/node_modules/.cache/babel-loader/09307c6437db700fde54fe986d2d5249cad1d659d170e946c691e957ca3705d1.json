{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KNUser\\\\Desktop\\\\TeamProject\\\\frontend\\\\src\\\\page\\\\board\\\\Write.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport BoardInput from \"../../components/BoardInput\";\nimport { api } from \"../../api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Write(props) {\n  _s();\n  const [board, setBoard] = useState({\n    title: \"\",\n    content: \"\",\n    categoryId: \"\",\n    // 카테고리 ID 추가\n    files: []\n  });\n  const navigate = useNavigate();\n  function ChangeValue(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setBoard(prevBoard => ({\n      ...prevBoard,\n      [name]: value\n    }));\n    console.log({\n      ...board,\n      [name]: value\n    }); // 디버깅용 로그\n  }\n  function handleFileChange(event) {\n    setBoard({\n      ...board,\n      files: Array.from(event.target.files)\n    });\n    console.log(board);\n  }\n  async function SubmitBoard(event) {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append(\"title\", board.title);\n    formData.append(\"content\", board.content);\n    formData.append(\"categoryId\", board.categoryId); // 카테고리 ID 추가\n\n    board.files.forEach(file => formData.append(\"files\", file));\n    try {\n      const response = await api.post('/board', formData);\n      console.log(response.data);\n      alert(\"게시글 작성에 성공하였습니다.\");\n      props.fetchBoards();\n      navigate(\"/board\");\n    } catch (error) {\n      console.error(\"Error:\", error);\n      alert(\"게시글 작성에 실패하였습니다.\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(BoardInput, {\n    SubmitBoard: SubmitBoard,\n    boardData: board,\n    ChangeValue: ChangeValue,\n    handleFileChange: handleFileChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(Write, \"r/te2jIFgX3/wksbkTcF8Gx4eGQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Write;\nvar _c;\n$RefreshReg$(_c, \"Write\");","map":{"version":3,"names":["React","useState","useNavigate","BoardInput","api","jsxDEV","_jsxDEV","Write","props","_s","board","setBoard","title","content","categoryId","files","navigate","ChangeValue","event","name","value","target","prevBoard","console","log","handleFileChange","Array","from","SubmitBoard","preventDefault","formData","FormData","append","forEach","file","response","post","data","alert","fetchBoards","error","boardData","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/KNUser/Desktop/TeamProject/frontend/src/page/board/Write.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport BoardInput from \"../../components/BoardInput\";\r\nimport { api } from \"../../api/api\";\r\n\r\nexport default function Write(props) {\r\n  const [board, setBoard] = useState({\r\n    title: \"\",\r\n    content: \"\",\r\n    categoryId: \"\", // 카테고리 ID 추가\r\n    files: [],\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  function ChangeValue(event) {\r\n    const { name, value } = event.target;\r\n    setBoard(prevBoard => ({\r\n      ...prevBoard,\r\n      [name]: value,\r\n    }));\r\n    console.log({ ...board, [name]: value }); // 디버깅용 로그\r\n  }\r\n\r\n  function handleFileChange(event) {\r\n    setBoard({\r\n      ...board,\r\n      files: Array.from(event.target.files),\r\n    });\r\n    console.log(board);\r\n  }\r\n\r\n  async function SubmitBoard(event) {\r\n    event.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"title\", board.title);\r\n    formData.append(\"content\", board.content);\r\n    formData.append(\"categoryId\", board.categoryId); // 카테고리 ID 추가\r\n\r\n    board.files.forEach((file) => formData.append(\"files\", file));\r\n\r\n    try {\r\n      const response = await api.post('/board', formData);\r\n      console.log(response.data);\r\n      alert(\"게시글 작성에 성공하였습니다.\");\r\n      props.fetchBoards();\r\n      navigate(\"/board\");\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      alert(\"게시글 작성에 실패하였습니다.\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <BoardInput\r\n      SubmitBoard={SubmitBoard}\r\n      boardData={board}\r\n      ChangeValue={ChangeValue}\r\n      handleFileChange={handleFileChange}\r\n    />\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,UAAU,MAAM,6BAA6B;AACpD,SAASC,GAAG,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,eAAe,SAASC,KAAKA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACnC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC;IACjCW,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE,EAAE;IACXC,UAAU,EAAE,EAAE;IAAE;IAChBC,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,MAAMC,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAE9B,SAASe,WAAWA,CAACC,KAAK,EAAE;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,KAAK,CAACG,MAAM;IACpCV,QAAQ,CAACW,SAAS,KAAK;MACrB,GAAGA,SAAS;MACZ,CAACH,IAAI,GAAGC;IACV,CAAC,CAAC,CAAC;IACHG,OAAO,CAACC,GAAG,CAAC;MAAE,GAAGd,KAAK;MAAE,CAACS,IAAI,GAAGC;IAAM,CAAC,CAAC,CAAC,CAAC;EAC5C;EAEA,SAASK,gBAAgBA,CAACP,KAAK,EAAE;IAC/BP,QAAQ,CAAC;MACP,GAAGD,KAAK;MACRK,KAAK,EAAEW,KAAK,CAACC,IAAI,CAACT,KAAK,CAACG,MAAM,CAACN,KAAK;IACtC,CAAC,CAAC;IACFQ,OAAO,CAACC,GAAG,CAACd,KAAK,CAAC;EACpB;EAEA,eAAekB,WAAWA,CAACV,KAAK,EAAE;IAChCA,KAAK,CAACW,cAAc,CAAC,CAAC;IAEtB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEtB,KAAK,CAACE,KAAK,CAAC;IACrCkB,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEtB,KAAK,CAACG,OAAO,CAAC;IACzCiB,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAEtB,KAAK,CAACI,UAAU,CAAC,CAAC,CAAC;;IAEjDJ,KAAK,CAACK,KAAK,CAACkB,OAAO,CAAEC,IAAI,IAAKJ,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEE,IAAI,CAAC,CAAC;IAE7D,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAM/B,GAAG,CAACgC,IAAI,CAAC,QAAQ,EAAEN,QAAQ,CAAC;MACnDP,OAAO,CAACC,GAAG,CAACW,QAAQ,CAACE,IAAI,CAAC;MAC1BC,KAAK,CAAC,kBAAkB,CAAC;MACzB9B,KAAK,CAAC+B,WAAW,CAAC,CAAC;MACnBvB,QAAQ,CAAC,QAAQ,CAAC;IACpB,CAAC,CAAC,OAAOwB,KAAK,EAAE;MACdjB,OAAO,CAACiB,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BF,KAAK,CAAC,kBAAkB,CAAC;IAC3B;EACF;EAEA,oBACEhC,OAAA,CAACH,UAAU;IACTyB,WAAW,EAAEA,WAAY;IACzBa,SAAS,EAAE/B,KAAM;IACjBO,WAAW,EAAEA,WAAY;IACzBQ,gBAAgB,EAAEA;EAAiB;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEN;AAACpC,EAAA,CAzDuBF,KAAK;EAAA,QAQVL,WAAW;AAAA;AAAA4C,EAAA,GARNvC,KAAK;AAAA,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}