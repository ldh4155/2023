{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\2023TeamProject\\\\graduate\\\\frontend\\\\src\\\\page\\\\sign\\\\SignUp.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { debounce } from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUp = () => {\n  _s();\n  const [id, setId] = useState();\n  const [password, setPassword] = useState();\n  const [idMessage, setIdMessage] = useState(\"\");\n  const checkId = debounce(async id => {\n    //정규식 검사\n    const regex = /^[a-zA-Z0-9]{4,10}$/; // 예: 영문자와 숫자로 이루어진 4자 이상의 아이디\n    if (!regex.test(id)) {\n      setIdMessage(\"영문자와 숫자로 이루어진 4~10자이내\");\n      return;\n    }\n    //중복 체크\n    try {\n      const response = await axios.get(`http://localhost:8080/signup?id=${id}`);\n      if (!response.data) setIdMessage(\"사용할 수 있는 아이디\");else setIdMessage(\"사용할 수 없는 아이디\");\n    } catch (error) {}\n  }, 1000);\n  const changeId = e => {\n    const {\n      value\n    } = e.target;\n    setId(value);\n    checkId(value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"id\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          value: id,\n          onChange: changeId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: idMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uC218\\uC815\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(SignUp, \"KRGaWQqHIjlfVLbupz2YP5ONcrA=\");\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["useState","axios","debounce","jsxDEV","_jsxDEV","SignUp","_s","id","setId","password","setPassword","idMessage","setIdMessage","checkId","regex","test","response","get","data","error","changeId","e","value","target","handleSubmit","preventDefault","children","onSubmit","type","required","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/2023TeamProject/graduate/frontend/src/page/sign/SignUp.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { debounce } from 'lodash';\r\nconst SignUp = () => {\r\n    const [id, setId] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [idMessage, setIdMessage] = useState(\"\");\r\n\r\n    const checkId = debounce(async (id) => {\r\n        //정규식 검사\r\n        const regex = /^[a-zA-Z0-9]{4,10}$/;  // 예: 영문자와 숫자로 이루어진 4자 이상의 아이디\r\n        if (!regex.test(id)) {\r\n            setIdMessage(\"영문자와 숫자로 이루어진 4~10자이내\");\r\n            return;\r\n        }\r\n        //중복 체크\r\n        try {\r\n            const response = await axios.get(`http://localhost:8080/signup?id=${id}`)\r\n            if(!response.data)\r\n                setIdMessage(\"사용할 수 있는 아이디\");\r\n            else\r\n                setIdMessage(\"사용할 수 없는 아이디\");\r\n        } catch (error) {\r\n\r\n        }\r\n    }, 1000);\r\n\r\n    const changeId = (e) => {\r\n        const {value} = e.target;\r\n        setId(value);\r\n        checkId(value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n    }\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <p>id<input type=\"text\" required={true} value={id} onChange={changeId}></input></p>\r\n                <p>{idMessage}</p>\r\n                <button type=\"submit\">수정</button>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default SignUp;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAClC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,EAAE,EAAEC,KAAK,CAAC,GAAGR,QAAQ,CAAC,CAAC;EAC9B,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,CAAC;EAC1C,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMa,OAAO,GAAGX,QAAQ,CAAC,MAAOK,EAAE,IAAK;IACnC;IACA,MAAMO,KAAK,GAAG,qBAAqB,CAAC,CAAE;IACtC,IAAI,CAACA,KAAK,CAACC,IAAI,CAACR,EAAE,CAAC,EAAE;MACjBK,YAAY,CAAC,uBAAuB,CAAC;MACrC;IACJ;IACA;IACA,IAAI;MACA,MAAMI,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAE,mCAAkCV,EAAG,EAAC,CAAC;MACzE,IAAG,CAACS,QAAQ,CAACE,IAAI,EACbN,YAAY,CAAC,cAAc,CAAC,CAAC,KAE7BA,YAAY,CAAC,cAAc,CAAC;IACpC,CAAC,CAAC,OAAOO,KAAK,EAAE,CAEhB;EACJ,CAAC,EAAE,IAAI,CAAC;EAER,MAAMC,QAAQ,GAAIC,CAAC,IAAK;IACpB,MAAM;MAACC;IAAK,CAAC,GAAGD,CAAC,CAACE,MAAM;IACxBf,KAAK,CAACc,KAAK,CAAC;IACZT,OAAO,CAACS,KAAK,CAAC;EAClB,CAAC;EAED,MAAME,YAAY,GAAIH,CAAC,IAAK;IACxBA,CAAC,CAACI,cAAc,CAAC,CAAC;EACtB,CAAC;EACD,oBACIrB,OAAA;IAAAsB,QAAA,eACItB,OAAA;MAAMuB,QAAQ,EAAEH,YAAa;MAAAE,QAAA,gBACzBtB,OAAA;QAAAsB,QAAA,GAAG,IAAE,eAAAtB,OAAA;UAAOwB,IAAI,EAAC,MAAM;UAACC,QAAQ,EAAE,IAAK;UAACP,KAAK,EAAEf,EAAG;UAACuB,QAAQ,EAAEV;QAAS;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACnF9B,OAAA;QAAAsB,QAAA,EAAIf;MAAS;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClB9B,OAAA;QAAQwB,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAGd,CAAC;AAAA5B,EAAA,CA3CKD,MAAM;AAAA8B,EAAA,GAAN9B,MAAM;AA4CZ,eAAeA,MAAM;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}