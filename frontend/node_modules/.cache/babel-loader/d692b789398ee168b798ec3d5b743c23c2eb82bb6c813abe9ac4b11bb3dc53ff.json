{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\2023TeamProject\\\\graduate\\\\frontend\\\\src\\\\page\\\\comment\\\\Comment.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useReducer } from 'react';\nimport CommentWrite from \"./CommentWrite\";\nimport { api } from \"../../api/api\";\nimport { decodeJwt } from \"../../api/decodeJwt\";\nimport styles from \"../../style/cssmodule/Comment/Comment.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comment = ({\n  boardId,\n  comments,\n  onCommentUpdate\n}) => {\n  _s();\n  const [commentList, setCommentList] = useState(comments);\n  const [visible, setVisible] = useState(10);\n  const [editingId, setEditingId] = useState(null);\n  const [editComment, setEditComment] = useState({\n    id: null,\n    content: \"\"\n  });\n  const myId = decodeJwt();\n  useEffect(() => {\n    setCommentList(comments);\n  }, [comments]);\n  const showMore = () => {\n    setVisible(prevValue => prevValue + 10);\n  };\n  const deleteComment = async id => {\n    try {\n      await api.delete(`board/${boardId}/comment/${id}`);\n      alert(\"삭제 성공\");\n      const newComments = commentList.filter(comment => comment.id !== id);\n      setCommentList(newComments);\n    } catch {\n      alert(\"삭제 실패\");\n    }\n  };\n  const updateComment = async () => {\n    if (editComment.content.trim() === \"\") {\n      alert(\"내용을 입력하세요\");\n    } else {\n      try {\n        const response = await api.put(`board/${boardId}/comment`, editComment);\n        setCommentList(commentList.map(comment => comment.id === response.data.id ? response.data : comment));\n        setEditingId(null);\n        setEditComment({\n          id: null,\n          comment: \"\"\n        });\n        alert(\"수정 성공\");\n        onCommentUpdate(); // 댓글 수정 후 콜백 호출\n      } catch (error) {\n        console.error(error);\n        alert(\"수정 실패\");\n      }\n    }\n  };\n  const handleEditClick = id => {\n    const commentToEdit = commentList.find(comment => comment.id === id);\n    setEditingId(id);\n    setEditComment({\n      id: id,\n      content: commentToEdit.content\n    });\n  };\n  const newComment = newComment => {\n    setCommentList([...commentList, newComment]);\n    onCommentUpdate(); // 댓글 작성 후 콜백 호출\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.commentContainer,\n    children: [/*#__PURE__*/_jsxDEV(CommentWrite, {\n      boardId: boardId,\n      newComment: newComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.commentList,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.commentHeader,\n        children: [\"\\uB313\\uAE00\\xA0\", commentList.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), commentList.slice(0, visible).map(comment => editingId === comment.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.commentItem,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: editComment.content,\n          onChange: e => setEditComment({\n            id: editingId,\n            content: e.target.value\n          }),\n          className: styles.editInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.editActions,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: updateComment,\n            children: \"\\uC800\\uC7A5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 29\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.commentItem,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.commentHeader,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: comment.memberNickName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.createTime,\n              children: comment.createTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 33\n          }, this), comment.memberId === myId && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.commentActions,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEditClick(comment.id),\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteComment(comment.id),\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.commentContent,\n          children: comment.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 29\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }, this)), visible < commentList.length && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.showMore,\n        onClick: showMore,\n        children: \"\\uB354\\uBCF4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_s(Comment, \"s4Hg0CUWuOX1Jko0v2647IPyuJI=\");\n_c = Comment;\nexport default Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","CommentWrite","api","decodeJwt","styles","jsxDEV","_jsxDEV","Comment","boardId","comments","onCommentUpdate","_s","commentList","setCommentList","visible","setVisible","editingId","setEditingId","editComment","setEditComment","id","content","myId","showMore","prevValue","deleteComment","delete","alert","newComments","filter","comment","updateComment","trim","response","put","map","data","error","console","handleEditClick","commentToEdit","find","newComment","className","commentContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","commentHeader","length","slice","commentItem","type","value","onChange","e","target","editInput","editActions","onClick","memberNickName","createTime","memberId","commentActions","commentContent","_c","$RefreshReg$"],"sources":["C:/Users/user/2023TeamProject/graduate/frontend/src/page/comment/Comment.js"],"sourcesContent":["import React, { useState, useEffect, useReducer } from 'react';\r\nimport CommentWrite from \"./CommentWrite\";\r\nimport { api } from \"../../api/api\";\r\nimport {decodeJwt} from \"../../api/decodeJwt\";\r\nimport styles from \"../../style/cssmodule/Comment/Comment.module.css\";\r\n\r\nconst Comment = ({ boardId, comments, onCommentUpdate}) => {\r\n\r\n    const [commentList, setCommentList] = useState(comments);\r\n    const [visible, setVisible] = useState(10);\r\n    const [editingId, setEditingId] = useState(null);\r\n    const [editComment, setEditComment] = useState({\r\n        id: null,\r\n        content: \"\"\r\n    });\r\n\r\n    const myId = decodeJwt();\r\n\r\n    useEffect(() => {\r\n        setCommentList(comments);\r\n    }, [comments]);\r\n\r\n    const showMore = () => {\r\n        setVisible((prevValue) => prevValue + 10);\r\n    };\r\n\r\n    const deleteComment = async (id) => {\r\n        try {\r\n            await api.delete(`board/${boardId}/comment/${id}`);\r\n            alert(\"삭제 성공\");\r\n\r\n            const newComments = commentList.filter(comment => comment.id !== id);\r\n            setCommentList(newComments);\r\n        } catch {\r\n            alert(\"삭제 실패\");\r\n        }\r\n    };\r\n\r\n    const updateComment = async () => {\r\n        if(editComment.content.trim() === \"\") {\r\n            alert(\"내용을 입력하세요\")\r\n        } else {\r\n            try {\r\n                const response = await api.put(`board/${boardId}/comment`,editComment)\r\n                setCommentList(commentList.map(comment =>\r\n                    comment.id === response.data.id ? response.data : comment));\r\n\r\n                setEditingId(null);\r\n                setEditComment({id : null, comment : \"\"});\r\n                alert(\"수정 성공\")\r\n                onCommentUpdate(); // 댓글 수정 후 콜백 호출\r\n            }catch (error) {\r\n                console.error(error)\r\n                alert(\"수정 실패\")\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleEditClick = (id) => {\r\n        const commentToEdit = commentList.find(comment => comment.id === id);\r\n        setEditingId(id);\r\n        setEditComment({ id: id, content: commentToEdit.content });\r\n    };\r\n\r\n    const newComment = (newComment) => {\r\n        setCommentList([...commentList, newComment]);\r\n        onCommentUpdate(); // 댓글 작성 후 콜백 호출\r\n    };\r\n\r\n    return (\r\n        <div className={styles.commentContainer}>\r\n            <CommentWrite boardId={boardId} newComment={newComment} />\r\n            <div className={styles.commentList}>\r\n                <p className={styles.commentHeader}>댓글&nbsp;{commentList.length}</p>\r\n                {commentList.slice(0, visible).map((comment) =>\r\n                    editingId === comment.id ? (\r\n                        <div key={comment.id} className={styles.commentItem}>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={editComment.content}\r\n                                onChange={(e) => setEditComment({ id: editingId, content: e.target.value })}\r\n                                className={styles.editInput}\r\n                            />\r\n                            <div className={styles.editActions}>\r\n                                <button onClick={updateComment}>저장</button>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <div key={comment.id} className={styles.commentItem}>\r\n                            <div className={styles.commentHeader}>\r\n                                <div>\r\n                                    <span>{comment.memberNickName}</span>\r\n                                    <span className={styles.createTime}>{comment.createTime}</span>\r\n                                </div>\r\n                                {comment.memberId === myId && (\r\n                                    <div className={styles.commentActions}>\r\n                                        <button onClick={() => handleEditClick(comment.id)}>수정</button>\r\n                                        <button onClick={() => deleteComment(comment.id)}>삭제</button>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                            <p className={styles.commentContent}>{comment.content}</p>\r\n                        </div>\r\n                    )\r\n                )}\r\n                {visible < commentList.length && (\r\n                    <p className={styles.showMore} onClick={showMore}>\r\n                        더보기\r\n                    </p>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Comment;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}