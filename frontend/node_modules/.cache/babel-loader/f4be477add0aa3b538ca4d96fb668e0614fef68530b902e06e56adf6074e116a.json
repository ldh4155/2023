{"ast":null,"code":"import axios from \"axios\";\nexport const api = axios.create({\n  baseURL: `http://localhost:8080/`\n});\n\n// 인증 토큰을 설정하는 함수\nexport function setAuthToken() {\n  const token = localStorage.getItem(\"Authorization\");\n  if (token) {\n    // 모든 요청의 Authorization 헤더에 토큰 추가\n    api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  } else {\n    // 토큰이 없으면 Authorization 헤더 삭제\n    delete api.defaults.headers.common['Authorization'];\n  }\n}","map":{"version":3,"names":["axios","api","create","baseURL","setAuthToken","token","localStorage","getItem","defaults","headers","common"],"sources":["C:/Users/user/2023TeamProject/graduate/frontend/src/api/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const api = axios.create({\r\n    baseURL:`http://localhost:8080/`,\r\n})\r\n\r\n// 인증 토큰을 설정하는 함수\r\nexport function setAuthToken() {\r\n\r\n    const token = localStorage.getItem(\"Authorization\");\r\n\r\n    if (token) {\r\n      // 모든 요청의 Authorization 헤더에 토큰 추가\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n    } else {\r\n      // 토큰이 없으면 Authorization 헤더 삭제\r\n      delete api.defaults.headers.common['Authorization'];\r\n    }\r\n  }\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC5BC,OAAO,EAAE;AACb,CAAC,CAAC;;AAEF;AACA,OAAO,SAASC,YAAYA,CAAA,EAAG;EAE3B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;EAEnD,IAAIF,KAAK,EAAE;IACT;IACAJ,GAAG,CAACO,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAI,UAASL,KAAM,EAAC;EAClE,CAAC,MAAM;IACL;IACA,OAAOJ,GAAG,CAACO,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;EACrD;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}