{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KNUser\\\\Desktop\\\\TeamProject\\\\frontend\\\\src\\\\page\\\\board\\\\BoardList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport BoardItem from \"./BoardItem\";\nimport BoardHeader from \"./BoardHeader\";\nimport Write from \"./Write\";\nimport BoardDetail from \"./BoardDetail\";\nimport Update from \"./Update\";\nimport { api } from \"../../api/api\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport \"../../style/page.css\";\nimport AreaFiltering from \"../../components/AreaFiltering\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BoardList() {\n  _s();\n  const [boards, setBoards] = useState([]);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [totalPages, setTotalPages] = useState(0);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedAreas, setSelectedAreas] = useState({\n    province: \"\",\n    citys: []\n  });\n  const [category, setCategory] = useState(\"\"); // 카테고리 상태 추가\n\n  useEffect(() => {\n    fetchBoards(currentPage);\n  }, [currentPage]);\n  useEffect(() => {\n    if (selectedAreas.citys.length > 0 || category) {\n      filterBoards();\n    } else {\n      fetchBoards(currentPage);\n    }\n  }, [selectedAreas, category]); // 카테고리 상태 감시 추가\n\n  const fetchBoards = (page, term) => {\n    api.get(`board?page=${page}&size=10&keyword=${term || \"\"}`).then(response => {\n      setBoards(response.data.content);\n      setCurrentPage(response.data.number);\n      setTotalPages(response.data.totalPages);\n    }).catch(error => {\n      console.error(\"Error fetching boards:\", error);\n    });\n  };\n  const filterBoards = () => {\n    const params = new URLSearchParams();\n    if (selectedAreas.citys.length > 0) {\n      selectedAreas.citys.forEach(city => params.append('cities', city));\n      while (params.getAll('cities').length < 5) {\n        params.append('cities', null);\n      }\n    }\n    if (category) {\n      params.append('category', category); // 카테고리 추가\n    }\n    api.get(`board/filter`, {\n      params\n    }).then(response => {\n      setBoards(response.data);\n    }).catch(error => {\n      console.error(\"Error filtering boards:\", error);\n    });\n  };\n  const previousPage = () => {\n    if (currentPage > 0) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n  const nextPage = () => {\n    if (currentPage < totalPages - 1) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n  const pageNumbers = [];\n  for (let i = 0; i < totalPages; i++) {\n    pageNumbers.push( /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCurrentPage(i),\n      children: i + 1\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this));\n  }\n  const handleSearch = () => {\n    fetchBoards(0, searchTerm);\n  };\n  const newBoard = newBoard => {\n    setBoards([...boards, newBoard]);\n  };\n  const handleAreaChange = areas => {\n    setSelectedAreas(areas);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AreaFiltering, {\n      onAreaChange: handleAreaChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BoardHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"\\uCE74\\uD14C\\uACE0\\uB9AC:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: category,\n          onChange: e => setCategory(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"\\uBAA8\\uB4E0 \\uCE74\\uD14C\\uACE0\\uB9AC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\\uC804\\uC790\\uC81C\\uD488\",\n            children: \"\\uC804\\uC790\\uC81C\\uD488\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\\uC2DD\\uD488\",\n            children: \"\\uC2DD\\uD488\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\\uC758\\uB958\",\n            children: \"\\uC758\\uB958\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\\uAE30\\uD0C0\",\n            children: \"\\uAE30\\uD0C0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"write\",\n        element: /*#__PURE__*/_jsxDEV(Write, {\n          fetchBoards: () => fetchBoards(currentPage)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \":id\",\n        element: /*#__PURE__*/_jsxDEV(BoardDetail, {\n          fetchBoards: () => fetchBoards(currentPage)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"update/:id\",\n        element: /*#__PURE__*/_jsxDEV(Update, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), boards.map(board => /*#__PURE__*/_jsxDEV(BoardItem, {\n      board: board,\n      fetchBoards: () => fetchBoards(currentPage)\n    }, board.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-padding\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"\\uAC80\\uC0C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: previousPage,\n        children: \"\\uC774\\uC804\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), pageNumbers, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextPage,\n        children: \"\\uB2E4\\uC74C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_s(BoardList, \"Is9LEE8OQwT/MgcSwjkjZT3u+0U=\");\n_c = BoardList;\nvar _c;\n$RefreshReg$(_c, \"BoardList\");","map":{"version":3,"names":["React","useEffect","useState","BoardItem","BoardHeader","Write","BoardDetail","Update","api","BrowserRouter","Route","Routes","AreaFiltering","jsxDEV","_jsxDEV","BoardList","_s","boards","setBoards","currentPage","setCurrentPage","totalPages","setTotalPages","searchTerm","setSearchTerm","selectedAreas","setSelectedAreas","province","citys","category","setCategory","fetchBoards","length","filterBoards","page","term","get","then","response","data","content","number","catch","error","console","params","URLSearchParams","forEach","city","append","getAll","previousPage","nextPage","pageNumbers","i","push","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","handleSearch","newBoard","handleAreaChange","areas","onAreaChange","value","onChange","e","target","path","element","map","board","id","className","type","_c","$RefreshReg$"],"sources":["C:/Users/KNUser/Desktop/TeamProject/frontend/src/page/board/BoardList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport BoardItem from \"./BoardItem\";\r\nimport BoardHeader from \"./BoardHeader\";\r\nimport Write from \"./Write\";\r\nimport BoardDetail from \"./BoardDetail\";\r\nimport Update from \"./Update\";\r\nimport { api } from \"../../api/api\";\r\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\r\nimport \"../../style/page.css\";\r\nimport AreaFiltering from \"../../components/AreaFiltering\";\r\n\r\nexport default function BoardList() {\r\n  const [boards, setBoards] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [selectedAreas, setSelectedAreas] = useState({\r\n    province: \"\",\r\n    citys: [],\r\n  });\r\n  const [category, setCategory] = useState(\"\"); // 카테고리 상태 추가\r\n\r\n  useEffect(() => {\r\n    fetchBoards(currentPage);\r\n  }, [currentPage]);\r\n\r\n  useEffect(() => {\r\n    if (selectedAreas.citys.length > 0 || category) {\r\n      filterBoards();\r\n    } else {\r\n      fetchBoards(currentPage);\r\n    }\r\n  }, [selectedAreas, category]); // 카테고리 상태 감시 추가\r\n\r\n  const fetchBoards = (page, term) => {\r\n    api\r\n      .get(`board?page=${page}&size=10&keyword=${term || \"\"}`)\r\n      .then((response) => {\r\n        setBoards(response.data.content);\r\n        setCurrentPage(response.data.number);\r\n        setTotalPages(response.data.totalPages);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching boards:\", error);\r\n      });\r\n  };\r\n\r\n  const filterBoards = () => {\r\n    const params = new URLSearchParams();\r\n\r\n    if (selectedAreas.citys.length > 0) {\r\n      selectedAreas.citys.forEach(city => params.append('cities', city));\r\n\r\n      while (params.getAll('cities').length < 5) {\r\n        params.append('cities', null);\r\n      }\r\n    }\r\n\r\n    if (category) {\r\n      params.append('category', category); // 카테고리 추가\r\n    }\r\n\r\n    api\r\n      .get(`board/filter`, { params })\r\n      .then((response) => {\r\n        setBoards(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error filtering boards:\", error);\r\n      });\r\n  };\r\n\r\n  const previousPage = () => {\r\n    if (currentPage > 0) {\r\n      setCurrentPage(currentPage - 1);\r\n    }\r\n  };\r\n\r\n  const nextPage = () => {\r\n    if (currentPage < totalPages - 1) {\r\n      setCurrentPage(currentPage + 1);\r\n    }\r\n  };\r\n\r\n  const pageNumbers = [];\r\n  for (let i = 0; i < totalPages; i++) {\r\n    pageNumbers.push(\r\n      <button key={i} onClick={() => setCurrentPage(i)}>\r\n        {i + 1}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  const handleSearch = () => {\r\n    fetchBoards(0, searchTerm);\r\n  };\r\n\r\n  const newBoard = (newBoard) => {\r\n    setBoards([...boards, newBoard]);\r\n  };\r\n\r\n  const handleAreaChange = (areas) => {\r\n    setSelectedAreas(areas);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AreaFiltering onAreaChange={handleAreaChange} />\r\n      <BoardHeader />\r\n      <div>\r\n        <label>\r\n          카테고리:\r\n          <select value={category} onChange={(e) => setCategory(e.target.value)}>\r\n            <option value=\"\">모든 카테고리</option>\r\n            <option value=\"전자제품\">전자제품</option>\r\n            <option value=\"식품\">식품</option>\r\n            <option value=\"의류\">의류</option>\r\n            <option value=\"기타\">기타</option>\r\n          </select>\r\n        </label>\r\n      </div>\r\n      <Routes>\r\n        <Route\r\n          path=\"write\"\r\n          element={<Write fetchBoards={() => fetchBoards(currentPage)} />}\r\n        />\r\n        <Route\r\n          path=\":id\"\r\n          element={<BoardDetail fetchBoards={() => fetchBoards(currentPage)} />}\r\n        />\r\n        <Route path=\"update/:id\" element={<Update />} />\r\n      </Routes>\r\n      {boards.map((board) => (\r\n        <BoardItem\r\n          key={board.id}\r\n          board={board}\r\n          fetchBoards={() => fetchBoards(currentPage)}\r\n        />\r\n      ))}\r\n      <div className=\"left-padding\">\r\n        <input\r\n          type=\"text\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n        />\r\n        <button onClick={handleSearch}>검색</button>\r\n        <br />\r\n        <button onClick={previousPage}>이전</button>\r\n        {pageNumbers}\r\n        <button onClick={nextPage}>다음</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}