{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KNUser\\\\Desktop\\\\TeamProject\\\\frontend\\\\src\\\\page\\\\board\\\\Write.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport BoardInput from \"../../components/BoardInput\";\nimport { api } from \"../../api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Write(props) {\n  _s();\n  const [board, setBoard] = useState({\n    title: \"\",\n    content: \"\",\n    files: []\n  });\n  const [userAddress, setUserAddress] = useState(\"\");\n  const navigate = useNavigate();\n  useEffect(() => {\n    // 현재 사용자의 address를 가져오는 API 호출\n    api.get(\"/current-user\").then(response => {\n      setUserAddress(response.data.address);\n    }).catch(error => {\n      console.error(\"Error fetching user address:\", error);\n    });\n  }, []);\n  function ChangeValue(event) {\n    setBoard({\n      ...board,\n      [event.target.name]: event.target.value\n    });\n  }\n  function handleFileChange(event) {\n    setBoard({\n      ...board,\n      files: Array.from(event.target.files)\n    });\n  }\n  function SubmitBoard(event) {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append(\"title\", board.title);\n    formData.append(\"content\", board.content);\n    formData.append(\"region\", userAddress); // 사용자 주소를 지역 정보로 사용\n\n    board.files.forEach(file => formData.append(\"files\", file));\n    api.post(`/board`, formData).then(data => {\n      alert(\"게시글 작성에 성공하였습니다.\");\n      props.fetchBoards();\n      navigate(\"/board\");\n    }).catch(error => {\n      alert(\"게시글 작성에 실패하였습니다.\");\n      console.error(\"Error:\", error);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(BoardInput, {\n    SubmitBoard: SubmitBoard,\n    boardData: board,\n    ChangeValue: ChangeValue,\n    handleFileChange: handleFileChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(Write, \"5/pqHwzA4W3hWxwRspMFQmv9viA=\", false, function () {\n  return [useNavigate];\n});\n_c = Write;\nvar _c;\n$RefreshReg$(_c, \"Write\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","BoardInput","api","jsxDEV","_jsxDEV","Write","props","_s","board","setBoard","title","content","files","userAddress","setUserAddress","navigate","get","then","response","data","address","catch","error","console","ChangeValue","event","target","name","value","handleFileChange","Array","from","SubmitBoard","preventDefault","formData","FormData","append","forEach","file","post","alert","fetchBoards","boardData","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/KNUser/Desktop/TeamProject/frontend/src/page/board/Write.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport BoardInput from \"../../components/BoardInput\";\r\nimport { api } from \"../../api/api\";\r\n\r\nexport default function Write(props) {\r\n  const [board, setBoard] = useState({\r\n    title: \"\",\r\n    content: \"\",\r\n    files: [],\r\n  });\r\n\r\n  const [userAddress, setUserAddress] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // 현재 사용자의 address를 가져오는 API 호출\r\n    api.get(\"/current-user\")\r\n      .then((response) => {\r\n        setUserAddress(response.data.address);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching user address:\", error);\r\n      });\r\n  }, []);\r\n\r\n  function ChangeValue(event) {\r\n    setBoard({\r\n      ...board,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  }\r\n\r\n  function handleFileChange(event) {\r\n    setBoard({\r\n      ...board,\r\n      files: Array.from(event.target.files),\r\n    });\r\n  }\r\n\r\n  function SubmitBoard(event) {\r\n    event.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"title\", board.title);\r\n    formData.append(\"content\", board.content);\r\n    formData.append(\"region\", userAddress); // 사용자 주소를 지역 정보로 사용\r\n\r\n    board.files.forEach((file) => formData.append(\"files\", file));\r\n\r\n    api.post(`/board`, formData)\r\n      .then((data) => {\r\n        alert(\"게시글 작성에 성공하였습니다.\");\r\n        props.fetchBoards();\r\n        navigate(\"/board\");\r\n      })\r\n      .catch((error) => {\r\n        alert(\"게시글 작성에 실패하였습니다.\");\r\n        console.error(\"Error:\", error);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <BoardInput\r\n      SubmitBoard={SubmitBoard}\r\n      boardData={board}\r\n      ChangeValue={ChangeValue}\r\n      handleFileChange={handleFileChange}\r\n    />\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,UAAU,MAAM,6BAA6B;AACpD,SAASC,GAAG,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,eAAe,SAASC,KAAKA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACnC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC;IACjCW,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE,EAAE;IACXC,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMgB,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd;IACAI,GAAG,CAACc,GAAG,CAAC,eAAe,CAAC,CACrBC,IAAI,CAAEC,QAAQ,IAAK;MAClBJ,cAAc,CAACI,QAAQ,CAACC,IAAI,CAACC,OAAO,CAAC;IACvC,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,SAASE,WAAWA,CAACC,KAAK,EAAE;IAC1BhB,QAAQ,CAAC;MACP,GAAGD,KAAK;MACR,CAACiB,KAAK,CAACC,MAAM,CAACC,IAAI,GAAGF,KAAK,CAACC,MAAM,CAACE;IACpC,CAAC,CAAC;EACJ;EAEA,SAASC,gBAAgBA,CAACJ,KAAK,EAAE;IAC/BhB,QAAQ,CAAC;MACP,GAAGD,KAAK;MACRI,KAAK,EAAEkB,KAAK,CAACC,IAAI,CAACN,KAAK,CAACC,MAAM,CAACd,KAAK;IACtC,CAAC,CAAC;EACJ;EAEA,SAASoB,WAAWA,CAACP,KAAK,EAAE;IAC1BA,KAAK,CAACQ,cAAc,CAAC,CAAC;IAEtB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE5B,KAAK,CAACE,KAAK,CAAC;IACrCwB,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAE5B,KAAK,CAACG,OAAO,CAAC;IACzCuB,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEvB,WAAW,CAAC,CAAC,CAAC;;IAExCL,KAAK,CAACI,KAAK,CAACyB,OAAO,CAAEC,IAAI,IAAKJ,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEE,IAAI,CAAC,CAAC;IAE7DpC,GAAG,CAACqC,IAAI,CAAE,QAAO,EAAEL,QAAQ,CAAC,CACzBjB,IAAI,CAAEE,IAAI,IAAK;MACdqB,KAAK,CAAC,kBAAkB,CAAC;MACzBlC,KAAK,CAACmC,WAAW,CAAC,CAAC;MACnB1B,QAAQ,CAAC,QAAQ,CAAC;IACpB,CAAC,CAAC,CACDM,KAAK,CAAEC,KAAK,IAAK;MAChBkB,KAAK,CAAC,kBAAkB,CAAC;MACzBjB,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CAAC;EACN;EAEA,oBACElB,OAAA,CAACH,UAAU;IACT+B,WAAW,EAAEA,WAAY;IACzBU,SAAS,EAAElC,KAAM;IACjBgB,WAAW,EAAEA,WAAY;IACzBK,gBAAgB,EAAEA;EAAiB;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEN;AAACvC,EAAA,CAlEuBF,KAAK;EAAA,QASVL,WAAW;AAAA;AAAA+C,EAAA,GATN1C,KAAK;AAAA,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}