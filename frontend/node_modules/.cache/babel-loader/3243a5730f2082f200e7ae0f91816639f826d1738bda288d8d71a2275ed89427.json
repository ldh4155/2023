{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\2023TeamProject\\\\graduate\\\\frontend\\\\src\\\\components\\\\CommentWrite.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useState } from 'react';\nimport { api, setAuthToken } from \"../api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentWrite = ({\n  boardId,\n  newComment\n}) => {\n  _s();\n  const [comment, setComment] = useState('');\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      setAuthToken();\n      //댓글 보내기\n      const response = await api.post(`board/${boardId}/comment`, {\n        content: comment\n      });\n      setComment('');\n      newComment(response.data);\n    } catch (error) {\n      alert(\"댓글 작성에 실패\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: comment,\n        onChange: event => setComment(event.target.value),\n        placeholder: \"\\uB313\\uAE00 \\uC785\\uB825\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uB313\\uAE00 \\uC791\\uC131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(CommentWrite, \"vhAvzpEN661Y5K0yhbG0Td/NMg4=\");\n_c = CommentWrite;\nexport default CommentWrite;\nvar _c;\n$RefreshReg$(_c, \"CommentWrite\");","map":{"version":3,"names":["axios","React","useState","api","setAuthToken","jsxDEV","_jsxDEV","CommentWrite","boardId","newComment","_s","comment","setComment","handleSubmit","event","preventDefault","response","post","content","data","error","alert","children","onSubmit","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["C:/Users/user/2023TeamProject/graduate/frontend/src/components/CommentWrite.js"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useState } from 'react';\r\nimport { api, setAuthToken } from \"../api/api\";\r\n\r\nconst CommentWrite = ({boardId, newComment}) => {\r\n\r\n    const [comment, setComment] = useState('');\r\n    \r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        try {\r\n            setAuthToken();\r\n            //댓글 보내기\r\n           const response =  await api.post(`board/${boardId}/comment`\r\n            , {content: comment});\r\n\r\n            setComment('');\r\n            newComment(response.data);\r\n        } catch(error) {\r\n            alert(\"댓글 작성에 실패\");\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <textarea \r\n                value={comment}\r\n                onChange={(event) => setComment(event.target.value)}\r\n                placeholder=\"댓글 입력\"/>\r\n\r\n                <button type=\"submit\">댓글 작성</button> \r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentWrite;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,GAAG,EAAEC,YAAY,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,YAAY,GAAGA,CAAC;EAACC,OAAO;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAE5C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMW,YAAY,GAAG,MAAOC,KAAK,IAAK;IAClCA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,IAAI;MACAX,YAAY,CAAC,CAAC;MACd;MACD,MAAMY,QAAQ,GAAI,MAAMb,GAAG,CAACc,IAAI,CAAE,SAAQT,OAAQ,UAAS,EACxD;QAACU,OAAO,EAAEP;MAAO,CAAC,CAAC;MAErBC,UAAU,CAAC,EAAE,CAAC;MACdH,UAAU,CAACO,QAAQ,CAACG,IAAI,CAAC;IAC7B,CAAC,CAAC,OAAMC,KAAK,EAAE;MACXC,KAAK,CAAC,WAAW,CAAC;IACtB;EACJ,CAAC;EACD,oBACIf,OAAA;IAAAgB,QAAA,eACIhB,OAAA;MAAMiB,QAAQ,EAAEV,YAAa;MAAAS,QAAA,gBACzBhB,OAAA;QACAkB,KAAK,EAAEb,OAAQ;QACfc,QAAQ,EAAGX,KAAK,IAAKF,UAAU,CAACE,KAAK,CAACY,MAAM,CAACF,KAAK,CAAE;QACpDG,WAAW,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAErBzB,OAAA;QAAQ0B,IAAI,EAAC,QAAQ;QAAAV,QAAA,EAAC;MAAK;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAAArB,EAAA,CA/BKH,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAiClB,eAAeA,YAAY;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}