{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\2023TeamProject\\\\graduate\\\\frontend\\\\src\\\\page\\\\board\\\\Write.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport BoardInput from \"../../components/BoardInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Write(props) {\n  _s();\n  const [board, setBoard] = useState({\n    title: \"\",\n    content: \"\"\n  });\n  const navigate = useNavigate();\n  function ChangeValue(event) {\n    setBoard({\n      ...board,\n      [event.target.name]: event.target.value\n    });\n  }\n  function SubmitBoard(event) {\n    event.preventDefault();\n    axios.post(\"http://localhost:8080/board\", board).then(res => {\n      if (res.status === 201) {\n        alert(\"게시글 작성이 완료 되었습니다.\");\n        navigate(\"/\");\n      } else {\n        alert(\"게시글 등록 실패.\");\n      }\n    }).catch(error => {\n      console.error(error);\n      alert(\"게시글 등록 실패.\");\n    });\n  }\n\n  //   fetch(\"http://localhost:8080/board\", {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json; charset=utf-8\",\n  //     },\n  //     body: JSON.stringify(board),\n  //   })\n  //     .then((res) => {\n  //       if (res.status === 201) {\n  //         return res.json();\n  //       } else {\n  //         return null;\n  //       }\n  //     })\n  //     .then((res) => {\n  //       if (res !== null) {\n  //         alert(\"게시글 작성이 완료 되었습니다.\");\n  //         navigate(\"/\");\n  //       } else {\n  //         alert(\"게시글 등록 실패.\");\n  //       }\n  //     });\n  // }\n\n  //input 분리\n  return /*#__PURE__*/_jsxDEV(BoardInput, {\n    SubmitBoard: SubmitBoard,\n    boardData: board,\n    ChangeValue: ChangeValue\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(Write, \"CvO02yy2zooiE2hWlMXd5jGDRq0=\", false, function () {\n  return [useNavigate];\n});\n_c = Write;\nvar _c;\n$RefreshReg$(_c, \"Write\");","map":{"version":3,"names":["axios","useState","Link","useNavigate","BoardInput","jsxDEV","_jsxDEV","Write","props","_s","board","setBoard","title","content","navigate","ChangeValue","event","target","name","value","SubmitBoard","preventDefault","post","then","res","status","alert","catch","error","console","boardData","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/2023TeamProject/graduate/frontend/src/page/board/Write.js"],"sourcesContent":["import axios from \"axios\";\nimport { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport BoardInput from \"../../components/BoardInput\";\n\nexport default function Write(props) {\n  const [board, setBoard] = useState({\n    title: \"\",\n    content: \"\",\n  });\n  const navigate = useNavigate();\n\n  function ChangeValue(event) {\n    setBoard({\n      ...board,\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  function SubmitBoard(event) {\n    event.preventDefault();\n    axios\n      .post(\"http://localhost:8080/board\", board)\n      .then((res) => {\n        if (res.status === 201) {\n          alert(\"게시글 작성이 완료 되었습니다.\");\n          navigate(\"/\");\n        } else {\n          alert(\"게시글 등록 실패.\");\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n        alert(\"게시글 등록 실패.\");\n      });\n  }\n\n  //   fetch(\"http://localhost:8080/board\", {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json; charset=utf-8\",\n  //     },\n  //     body: JSON.stringify(board),\n  //   })\n  //     .then((res) => {\n  //       if (res.status === 201) {\n  //         return res.json();\n  //       } else {\n  //         return null;\n  //       }\n  //     })\n  //     .then((res) => {\n  //       if (res !== null) {\n  //         alert(\"게시글 작성이 완료 되었습니다.\");\n  //         navigate(\"/\");\n  //       } else {\n  //         alert(\"게시글 등록 실패.\");\n  //       }\n  //     });\n  // }\n\n  //input 분리\n  return (\n    <BoardInput\n      SubmitBoard={SubmitBoard}\n      boardData={board}\n      ChangeValue={ChangeValue}\n    />\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,OAAOC,UAAU,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,eAAe,SAASC,KAAKA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACnC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC;IACjCW,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE;EACX,CAAC,CAAC;EACF,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,SAASY,WAAWA,CAACC,KAAK,EAAE;IAC1BL,QAAQ,CAAC;MACP,GAAGD,KAAK;MACR,CAACM,KAAK,CAACC,MAAM,CAACC,IAAI,GAAGF,KAAK,CAACC,MAAM,CAACE;IACpC,CAAC,CAAC;EACJ;EAEA,SAASC,WAAWA,CAACJ,KAAK,EAAE;IAC1BA,KAAK,CAACK,cAAc,CAAC,CAAC;IACtBrB,KAAK,CACFsB,IAAI,CAAC,6BAA6B,EAAEZ,KAAK,CAAC,CAC1Ca,IAAI,CAAEC,GAAG,IAAK;MACb,IAAIA,GAAG,CAACC,MAAM,KAAK,GAAG,EAAE;QACtBC,KAAK,CAAC,mBAAmB,CAAC;QAC1BZ,QAAQ,CAAC,GAAG,CAAC;MACf,CAAC,MAAM;QACLY,KAAK,CAAC,YAAY,CAAC;MACrB;IACF,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBF,KAAK,CAAC,YAAY,CAAC;IACrB,CAAC,CAAC;EACN;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA,oBACEpB,OAAA,CAACF,UAAU;IACTgB,WAAW,EAAEA,WAAY;IACzBU,SAAS,EAAEpB,KAAM;IACjBK,WAAW,EAAEA;EAAY;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AAEN;AAACzB,EAAA,CAhEuBF,KAAK;EAAA,QAKVJ,WAAW;AAAA;AAAAgC,EAAA,GALN5B,KAAK;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}