{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\2023TeamProject\\\\graduate\\\\frontend\\\\src\\\\page\\\\board\\\\BoardDetail.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport ImageList from \"../../components/ImageList\";\nimport Comment from \"../comment/Comment\";\nimport { api } from \"../../api/api\";\nimport { decodeJwt } from \"../../api/decodeJwt\";\nimport Modal from \"../../components/Modal\";\nimport ModalBoard from \"./ModalBoard\";\nimport BoardList from \"./BoardList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function BoardDetail(props) {\n  _s();\n  const propsParam = useParams();\n  const id = propsParam.id;\n  const navigate = useNavigate();\n  const [boardData, setBoardData] = useState(null);\n  const [modalBoard, setModalBoard] = useState({});\n  const myId = decodeJwt();\n  const fetchBoardData = () => {\n    api.get(`board/${id}`).then(res => {\n      setBoardData(res.data);\n      console.log(res.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  useEffect(() => {\n    fetchBoardData();\n  }, [id]);\n  function DeleteBoard(id) {\n    api.delete(`board/${id}`).then(res => {\n      if (res.data === \"ok\") {\n        alert(\"삭제 되었습니다.\");\n        props.fetchBoards(); //새로고침 없이 삭제 확인\n        navigate(\"/board\");\n      } else {\n        alert(\"삭제 실패했습니다\");\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n  function UpdateBoard(id) {\n    navigate(\"/board/Update/\" + id);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: boardData ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"\\uC81C\\uBAA9 : \", boardData.title, \" \", boardData.memberId === myId &&\n          /*#__PURE__*/\n          //자기 게시물이면 보이게\n          _jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => UpdateBoard(boardData.id),\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => DeleteBoard(boardData.id),\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Modal, {\n            boardData: boardData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"\\uB0B4\\uC6A9 : \", boardData.content]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"\\uCE74\\uD14C\\uACE0\\uB9AC : \", boardData.category]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ImageList, {\n          imageUrls: boardData.imageUrls\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"\\uC870\\uD68C\\uC218 : \", boardData.view]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"\\uC791\\uC131\\uC2DC\\uAC04 : \", boardData.time]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Comment, {\n        boardId: id,\n        comments: boardData.comments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(BoardDetail, \"oqNaqccBs1toM2sPr2MSWo8a/aY=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = BoardDetail;\nvar _c;\n$RefreshReg$(_c, \"BoardDetail\");","map":{"version":3,"names":["useEffect","useState","useParams","useNavigate","ImageList","Comment","api","decodeJwt","Modal","ModalBoard","BoardList","jsxDEV","_jsxDEV","Fragment","_Fragment","BoardDetail","props","_s","propsParam","id","navigate","boardData","setBoardData","modalBoard","setModalBoard","myId","fetchBoardData","get","then","res","data","console","log","catch","error","DeleteBoard","delete","alert","fetchBoards","UpdateBoard","children","title","memberId","onClick","fileName","_jsxFileName","lineNumber","columnNumber","content","category","imageUrls","view","time","boardId","comments","_c","$RefreshReg$"],"sources":["C:/Users/user/2023TeamProject/graduate/frontend/src/page/board/BoardDetail.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport ImageList from \"../../components/ImageList\";\r\nimport Comment from \"../comment/Comment\";\r\nimport { api } from \"../../api/api\";\r\nimport {decodeJwt} from \"../../api/decodeJwt\";\r\nimport Modal from \"../../components/Modal\";\r\nimport ModalBoard from \"./ModalBoard\";\r\nimport BoardList from \"./BoardList\";\r\n\r\nexport default function BoardDetail(props) {\r\n  const propsParam = useParams();\r\n  const id = propsParam.id;\r\n  const navigate = useNavigate();\r\n  const [boardData, setBoardData] = useState(null);\r\n  const [modalBoard, setModalBoard] = useState({});\r\n  const myId = decodeJwt();\r\n\r\n  const fetchBoardData = () => {\r\n    api\r\n      .get(`board/${id}`)\r\n      .then((res) => {\r\n        setBoardData(res.data);\r\n        console.log(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchBoardData();\r\n  }, [id]);\r\n\r\n  function DeleteBoard(id) {\r\n    api\r\n      .delete(`board/${id}`)\r\n      .then((res) => {\r\n        if (res.data === \"ok\") {\r\n          alert(\"삭제 되었습니다.\");\r\n          props.fetchBoards(); //새로고침 없이 삭제 확인\r\n          navigate(\"/board\");\r\n        } else {\r\n          alert(\"삭제 실패했습니다\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  function UpdateBoard(id) {\r\n    navigate(\"/board/Update/\" + id);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {boardData ? (\r\n        <>\r\n          <div>\r\n            <h1>\r\n              제목 : {boardData.title}{\" \"}\r\n              {boardData.memberId === myId && ( //자기 게시물이면 보이게\r\n                <>\r\n                  <button onClick={() => UpdateBoard(boardData.id)}>수정</button>{\" \"}\r\n                  <button onClick={() => DeleteBoard(boardData.id)}>삭제</button>      \r\n                </>\r\n              )}\r\n              <Modal boardData={boardData} />\r\n            </h1>\r\n            <hr />\r\n            <h3>내용 : {boardData.content}</h3>\r\n            <h4>카테고리 : {boardData.category}</h4>\r\n            <ImageList imageUrls={boardData.imageUrls} />\r\n            <h5>조회수 : {boardData.view}</h5>\r\n            <h5>작성시간 : {boardData.time}</h5>\r\n          </div>\r\n          <Comment boardId={id} comments={boardData.comments} />\r\n        </>\r\n      ) : (\r\n        <p>Loading...</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,OAAO,MAAM,oBAAoB;AACxC,SAASC,GAAG,QAAQ,eAAe;AACnC,SAAQC,SAAS,QAAO,qBAAqB;AAC7C,OAAOC,KAAK,MAAM,wBAAwB;AAC1C,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpC,eAAe,SAASC,WAAWA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACzC,MAAMC,UAAU,GAAGhB,SAAS,CAAC,CAAC;EAC9B,MAAMiB,EAAE,GAAGD,UAAU,CAACC,EAAE;EACxB,MAAMC,QAAQ,GAAGjB,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACsB,UAAU,EAAEC,aAAa,CAAC,GAAGvB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChD,MAAMwB,IAAI,GAAGlB,SAAS,CAAC,CAAC;EAExB,MAAMmB,cAAc,GAAGA,CAAA,KAAM;IAC3BpB,GAAG,CACAqB,GAAG,CAAE,SAAQR,EAAG,EAAC,CAAC,CAClBS,IAAI,CAAEC,GAAG,IAAK;MACbP,YAAY,CAACO,GAAG,CAACC,IAAI,CAAC;MACtBC,OAAO,CAACC,GAAG,CAACH,GAAG,CAACC,IAAI,CAAC;IACvB,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAK;MAChBH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IACpB,CAAC,CAAC;EACN,CAAC;EAEDlC,SAAS,CAAC,MAAM;IACd0B,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACP,EAAE,CAAC,CAAC;EAER,SAASgB,WAAWA,CAAChB,EAAE,EAAE;IACvBb,GAAG,CACA8B,MAAM,CAAE,SAAQjB,EAAG,EAAC,CAAC,CACrBS,IAAI,CAAEC,GAAG,IAAK;MACb,IAAIA,GAAG,CAACC,IAAI,KAAK,IAAI,EAAE;QACrBO,KAAK,CAAC,WAAW,CAAC;QAClBrB,KAAK,CAACsB,WAAW,CAAC,CAAC,CAAC,CAAC;QACrBlB,QAAQ,CAAC,QAAQ,CAAC;MACpB,CAAC,MAAM;QACLiB,KAAK,CAAC,WAAW,CAAC;MACpB;IACF,CAAC,CAAC,CACDJ,KAAK,CAAEC,KAAK,IAAK;MAChBH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;EACN;EAEA,SAASK,WAAWA,CAACpB,EAAE,EAAE;IACvBC,QAAQ,CAAC,gBAAgB,GAAGD,EAAE,CAAC;EACjC;EAEA,oBACEP,OAAA;IAAA4B,QAAA,EACGnB,SAAS,gBACRT,OAAA,CAAAE,SAAA;MAAA0B,QAAA,gBACE5B,OAAA;QAAA4B,QAAA,gBACE5B,OAAA;UAAA4B,QAAA,GAAI,iBACG,EAACnB,SAAS,CAACoB,KAAK,EAAE,GAAG,EACzBpB,SAAS,CAACqB,QAAQ,KAAKjB,IAAI;UAAA;UAAM;UAChCb,OAAA,CAAAE,SAAA;YAAA0B,QAAA,gBACE5B,OAAA;cAAQ+B,OAAO,EAAEA,CAAA,KAAMJ,WAAW,CAAClB,SAAS,CAACF,EAAE,CAAE;cAAAqB,QAAA,EAAC;YAAE;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EAAC,GAAG,eACjEnC,OAAA;cAAQ+B,OAAO,EAAEA,CAAA,KAAMR,WAAW,CAACd,SAAS,CAACF,EAAE,CAAE;cAAAqB,QAAA,EAAC;YAAE;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA,eAC7D,CACH,eACDnC,OAAA,CAACJ,KAAK;YAACa,SAAS,EAAEA;UAAU;YAAAuB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC,eACLnC,OAAA;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNnC,OAAA;UAAA4B,QAAA,GAAI,iBAAK,EAACnB,SAAS,CAAC2B,OAAO;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACjCnC,OAAA;UAAA4B,QAAA,GAAI,6BAAO,EAACnB,SAAS,CAAC4B,QAAQ;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpCnC,OAAA,CAACR,SAAS;UAAC8C,SAAS,EAAE7B,SAAS,CAAC6B;QAAU;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC7CnC,OAAA;UAAA4B,QAAA,GAAI,uBAAM,EAACnB,SAAS,CAAC8B,IAAI;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC/BnC,OAAA;UAAA4B,QAAA,GAAI,6BAAO,EAACnB,SAAS,CAAC+B,IAAI;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eACNnC,OAAA,CAACP,OAAO;QAACgD,OAAO,EAAElC,EAAG;QAACmC,QAAQ,EAAEjC,SAAS,CAACiC;MAAS;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eACtD,CAAC,gBAEHnC,OAAA;MAAA4B,QAAA,EAAG;IAAU;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACjB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC9B,EAAA,CA1EuBF,WAAW;EAAA,QACdb,SAAS,EAEXC,WAAW;AAAA;AAAAoD,EAAA,GAHNxC,WAAW;AAAA,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}