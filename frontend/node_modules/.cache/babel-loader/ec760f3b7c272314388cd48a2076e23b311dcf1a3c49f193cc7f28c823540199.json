{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KNUser\\\\Desktop\\\\TeamProject\\\\frontend\\\\src\\\\page\\\\board\\\\BoardList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport BoardItem from \"./BoardItem\";\nimport BoardHeader from \"./BoardHeader\";\nimport Write from \"./Write\";\nimport BoardDetail from \"./BoardDetail\";\nimport Update from \"./Update\";\nimport { api } from \"../../api/api\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport \"../../style/page.css\";\nimport AreaFiltering from \"../../components/AreaFiltering\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BoardList() {\n  _s();\n  const [boards, setBoards] = useState([]);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [totalPages, setTotalPages] = useState(0);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedAreas, setSelectedAreas] = useState({\n    province: \"\",\n    citys: []\n  });\n  useEffect(() => {\n    fetchBoards(currentPage);\n  }, [currentPage]);\n  useEffect(() => {\n    if (selectedAreas.citys.length > 0) {\n      filterBoards();\n    } else {\n      fetchBoards(currentPage);\n    }\n  }, [selectedAreas]);\n  const fetchBoards = (page, term) => {\n    api.get(`board?page=${page}&size=10&keyword=${term || \"\"}`).then(response => {\n      setBoards(response.data.content);\n      setCurrentPage(response.data.number);\n      setTotalPages(response.data.totalPages);\n    }).catch(error => {\n      console.error(\"Error fetching boards:\", error);\n    });\n  };\n  const filterBoards = () => {\n    const params = new URLSearchParams();\n    selectedAreas.citys.forEach(city => params.append('cities', city));\n    while (params.getAll('cities').length < 5) {\n      params.append('cities', null);\n    }\n    api.get(`board/filter`, {\n      params\n    }).then(response => {\n      setBoards(response.data);\n    }).catch(error => {\n      console.error(\"Error filtering boards:\", error);\n    });\n  };\n  const previousPage = () => {\n    if (currentPage > 0) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n  const nextPage = () => {\n    if (currentPage < totalPages - 1) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n  const pageNumbers = [];\n  for (let i = 0; i < totalPages; i++) {\n    pageNumbers.push( /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCurrentPage(i),\n      children: i + 1\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this));\n  }\n  const handleSearch = () => {\n    fetchBoards(0, searchTerm);\n  };\n  const newBoard = newBoard => {\n    setBoards([...boards, newBoard]);\n  };\n  const handleAreaChange = areas => {\n    setSelectedAreas(areas);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AreaFiltering, {\n      onAreaChange: handleAreaChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BoardHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"write\",\n        element: /*#__PURE__*/_jsxDEV(Write, {\n          fetchBoards: () => fetchBoards(currentPage)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \":id\",\n        element: /*#__PURE__*/_jsxDEV(BoardDetail, {\n          fetchBoards: () => fetchBoards(currentPage)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"update/:id\",\n        element: /*#__PURE__*/_jsxDEV(Update, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), boards.map(board => /*#__PURE__*/_jsxDEV(BoardItem, {\n      board: board,\n      fetchBoards: () => fetchBoards(currentPage)\n    }, board.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-padding\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"\\uAC80\\uC0C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: previousPage,\n        children: \"\\uC774\\uC804\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), pageNumbers, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextPage,\n        children: \"\\uB2E4\\uC74C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_s(BoardList, \"uMZMg7eJxfJXhWKBrwboYBfdoVI=\");\n_c = BoardList;\nvar _c;\n$RefreshReg$(_c, \"BoardList\");","map":{"version":3,"names":["React","useEffect","useState","BoardItem","BoardHeader","Write","BoardDetail","Update","api","BrowserRouter","Route","Routes","AreaFiltering","jsxDEV","_jsxDEV","BoardList","_s","boards","setBoards","currentPage","setCurrentPage","totalPages","setTotalPages","searchTerm","setSearchTerm","selectedAreas","setSelectedAreas","province","citys","fetchBoards","length","filterBoards","page","term","get","then","response","data","content","number","catch","error","console","params","URLSearchParams","forEach","city","append","getAll","previousPage","nextPage","pageNumbers","i","push","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","handleSearch","newBoard","handleAreaChange","areas","onAreaChange","path","element","map","board","id","className","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/KNUser/Desktop/TeamProject/frontend/src/page/board/BoardList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport BoardItem from \"./BoardItem\";\r\nimport BoardHeader from \"./BoardHeader\";\r\nimport Write from \"./Write\";\r\nimport BoardDetail from \"./BoardDetail\";\r\nimport Update from \"./Update\";\r\nimport { api } from \"../../api/api\";\r\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\r\nimport \"../../style/page.css\";\r\nimport AreaFiltering from \"../../components/AreaFiltering\";\r\n\r\nexport default function BoardList() {\r\n  const [boards, setBoards] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [selectedAreas, setSelectedAreas] = useState({\r\n    province: \"\",\r\n    citys: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchBoards(currentPage);\r\n  }, [currentPage]);\r\n\r\n  useEffect(() => {\r\n    if (selectedAreas.citys.length > 0) {\r\n      filterBoards();\r\n    } else {\r\n      fetchBoards(currentPage);\r\n    }\r\n  }, [selectedAreas]);\r\n\r\n  const fetchBoards = (page, term) => {\r\n    api\r\n      .get(`board?page=${page}&size=10&keyword=${term || \"\"}`)\r\n      .then((response) => {\r\n        setBoards(response.data.content);\r\n        setCurrentPage(response.data.number);\r\n        setTotalPages(response.data.totalPages);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching boards:\", error);\r\n      });\r\n  };\r\n\r\n  const filterBoards = () => {\r\n    const params = new URLSearchParams();\r\n    selectedAreas.citys.forEach(city => params.append('cities', city));\r\n\r\n    while (params.getAll('cities').length < 5) {\r\n      params.append('cities', null);\r\n    }\r\n\r\n    api\r\n      .get(`board/filter`, { params })\r\n      .then((response) => {\r\n        setBoards(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error filtering boards:\", error);\r\n      });\r\n  };\r\n\r\n  const previousPage = () => {\r\n    if (currentPage > 0) {\r\n      setCurrentPage(currentPage - 1);\r\n    }\r\n  };\r\n\r\n  const nextPage = () => {\r\n    if (currentPage < totalPages - 1) {\r\n      setCurrentPage(currentPage + 1);\r\n    }\r\n  };\r\n\r\n  const pageNumbers = [];\r\n  for (let i = 0; i < totalPages; i++) {\r\n    pageNumbers.push(\r\n      <button key={i} onClick={() => setCurrentPage(i)}>\r\n        {i + 1}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  const handleSearch = () => {\r\n    fetchBoards(0, searchTerm);\r\n  };\r\n\r\n  const newBoard = (newBoard) => {\r\n    setBoards([...boards, newBoard]);\r\n  };\r\n\r\n  const handleAreaChange = (areas) => {\r\n    setSelectedAreas(areas);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AreaFiltering onAreaChange={handleAreaChange} />\r\n      <BoardHeader />\r\n      <Routes>\r\n        <Route\r\n          path=\"write\"\r\n          element={<Write fetchBoards={() => fetchBoards(currentPage)} />}\r\n        />\r\n        <Route\r\n          path=\":id\"\r\n          element={<BoardDetail fetchBoards={() => fetchBoards(currentPage)} />}\r\n        />\r\n        <Route path=\"update/:id\" element={<Update />} />\r\n      </Routes>\r\n      {boards.map((board) => (\r\n        <BoardItem\r\n          key={board.id}\r\n          board={board}\r\n          fetchBoards={() => fetchBoards(currentPage)}\r\n        />\r\n      ))}\r\n      <div className=\"left-padding\">\r\n        <input\r\n          type=\"text\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n        />\r\n        <button onClick={handleSearch}>검색</button>\r\n        <br />\r\n        <button onClick={previousPage}>이전</button>\r\n        {pageNumbers}\r\n        <button onClick={nextPage}>다음</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}