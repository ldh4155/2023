{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\2023TeamProject\\\\graduate\\\\frontend\\\\src\\\\components\\\\CommentList.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentList = ({\n  boardId,\n  comments\n}) => {\n  _s();\n  const [localComments, setLocalComments] = useState(comments);\n  const [visible, setVisible] = useState(10);\n  const showMore = () => {\n    setVisible(prevValue => prevValue + 10);\n  };\n  const deleteComment = async id => {\n    try {\n      await axios.delete(`http://localhost:8080/board/${boardId}/comment/${id}`);\n      alert(\"삭제 성공\");\n      const newComments = localComments.filter(comment => comment.id !== id);\n      setLocalComments(newComments);\n    } catch {\n      alert(\"삭제 실패\");\n    }\n  };\n  const updateForm = () => {};\n  const updateComment = async id => {\n    try {\n      await axios.put(`http://localhost:8080/board/${boardId}/comment/${id}`);\n    } catch (error) {\n      console.log();\n      alert(\"수정 실패\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uB313\\uAE00\\xA0\", localComments.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), localComments.slice(0, visible).map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: comment.memberNickName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: comment.createTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => updateComment(comment.id),\n        children: \"\\uC218\\uC815\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteComment(comment.id),\n        children: \"\\uC0AD\\uC81C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: comment.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this)]\n    }, comment.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this)), visible < localComments.length && /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: showMore,\n      children: \"\\uB354\\uBCF4\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(CommentList, \"9Eg++p9wrhdm6fKcUUxQLU5m1Ys=\");\n_c = CommentList;\nexport default CommentList;\nvar _c;\n$RefreshReg$(_c, \"CommentList\");","map":{"version":3,"names":["axios","React","useState","jsxDEV","_jsxDEV","CommentList","boardId","comments","_s","localComments","setLocalComments","visible","setVisible","showMore","prevValue","deleteComment","id","delete","alert","newComments","filter","comment","updateForm","updateComment","put","error","console","log","children","length","fileName","_jsxFileName","lineNumber","columnNumber","slice","map","memberNickName","createTime","onClick","content","_c","$RefreshReg$"],"sources":["C:/Users/user/2023TeamProject/graduate/frontend/src/components/CommentList.js"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useState } from 'react';\r\n\r\nconst CommentList = ({boardId,comments}) => {\r\n    \r\n    const [localComments, setLocalComments] = useState(comments);\r\n    const [visible,setVisible] = useState(10);\r\n\r\n    const showMore = () => {\r\n        setVisible((prevValue) => prevValue + 10);\r\n    }\r\n\r\n    const deleteComment = async(id) => {\r\n        try {\r\n            await axios.delete(`http://localhost:8080/board/${boardId}/comment/${id}`)\r\n            alert(\"삭제 성공\")\r\n\r\n            const newComments = localComments.filter(comment => comment.id !== id);\r\n            setLocalComments(newComments);\r\n        } catch {\r\n            alert(\"삭제 실패\")\r\n        }\r\n    }\r\n\r\n    const updateForm = () => {\r\n\r\n    }\r\n\r\n    const updateComment = async(id) => {\r\n        try {\r\n            await axios.put(`http://localhost:8080/board/${boardId}/comment/${id}`)\r\n        } catch(error) {\r\n            console.log()\r\n            alert(\"수정 실패\")\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <p>댓글&nbsp;{localComments.length}</p>\r\n            {localComments.slice(0,visible).map((comment) => (\r\n                <div key={comment.id}>\r\n                    <span>{comment.memberNickName}</span>&nbsp;&nbsp;&nbsp;\r\n                    <span>{comment.createTime}</span>&nbsp;\r\n                    <button onClick={() => updateComment(comment.id)}>수정</button>&nbsp;\r\n                    <button onClick={() => deleteComment(comment.id)}>삭제</button>\r\n                    <p>{comment.content}</p>\r\n                </div>\r\n            ))}\r\n            {visible < localComments.length && (\r\n                <p onClick={showMore}>더보기</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CommentList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}