{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\2023TeamProject\\\\graduate\\\\frontend\\\\src\\\\page\\\\comment\\\\CommentWrite.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { api } from \"../../api/api\";\nimport styles from '../../style/cssmodule/component/Commentwrite.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentWrite = ({\n  boardId,\n  newComment\n}) => {\n  _s();\n  const [comment, setComment] = useState('');\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (comment.trim() === '') {\n      alert(\"내용을 입력하세요\");\n    } else {\n      try {\n        //댓글 보내기\n        const response = await api.post(`board/${boardId}/comment`, {\n          content: comment\n        });\n        setComment('');\n        newComment(response.data);\n      } catch (error) {\n        alert(\"댓글 작성에 실패\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.commentForm,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: styles.commentTextarea,\n        value: comment,\n        onChange: event => setComment(event.target.value),\n        placeholder: \"\\uB313\\uAE00 \\uC785\\uB825\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: styles.commentButton,\n        children: \"\\uB313\\uAE00 \\uC791\\uC131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(CommentWrite, \"vhAvzpEN661Y5K0yhbG0Td/NMg4=\");\n_c = CommentWrite;\nexport default CommentWrite;\nvar _c;\n$RefreshReg$(_c, \"CommentWrite\");","map":{"version":3,"names":["React","useState","api","styles","jsxDEV","_jsxDEV","CommentWrite","boardId","newComment","_s","comment","setComment","handleSubmit","event","preventDefault","trim","alert","response","post","content","data","error","className","commentForm","children","onSubmit","commentTextarea","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","type","commentButton","_c","$RefreshReg$"],"sources":["C:/Users/user/2023TeamProject/graduate/frontend/src/page/comment/CommentWrite.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { api } from \"../../api/api\";\r\nimport styles from '../../style/cssmodule/component/Commentwrite.module.css';\r\n\r\nconst CommentWrite = ({boardId, newComment}) => {\r\n\r\n    const [comment, setComment] = useState('');\r\n    \r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if(comment.trim() === '') {\r\n            alert(\"내용을 입력하세요\")\r\n        } else {\r\n            try {\r\n                //댓글 보내기\r\n               const response =  await api.post(`board/${boardId}/comment`\r\n                , {content: comment});\r\n    \r\n                setComment('');\r\n                newComment(response.data);\r\n            } catch(error) {\r\n                alert(\"댓글 작성에 실패\");\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <div className={styles.commentForm}>\r\n            <form onSubmit={handleSubmit}>\r\n        <textarea\r\n            className={styles.commentTextarea}\r\n            value={comment}\r\n            onChange={(event) => setComment(event.target.value)}\r\n            placeholder=\"댓글 입력\"\r\n        />\r\n                <button type=\"submit\" className={styles.commentButton}>\r\n                    댓글 작성\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CommentWrite;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,GAAG,QAAQ,eAAe;AACnC,OAAOC,MAAM,MAAM,yDAAyD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7E,MAAMC,YAAY,GAAGA,CAAC;EAACC,OAAO;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAE5C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMW,YAAY,GAAG,MAAOC,KAAK,IAAK;IAClCA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,IAAGJ,OAAO,CAACK,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACtBC,KAAK,CAAC,WAAW,CAAC;IACtB,CAAC,MAAM;MACH,IAAI;QACA;QACD,MAAMC,QAAQ,GAAI,MAAMf,GAAG,CAACgB,IAAI,CAAE,SAAQX,OAAQ,UAAS,EACxD;UAACY,OAAO,EAAET;QAAO,CAAC,CAAC;QAErBC,UAAU,CAAC,EAAE,CAAC;QACdH,UAAU,CAACS,QAAQ,CAACG,IAAI,CAAC;MAC7B,CAAC,CAAC,OAAMC,KAAK,EAAE;QACXL,KAAK,CAAC,WAAW,CAAC;MACtB;IACJ;EACJ,CAAC;EACD,oBACIX,OAAA;IAAKiB,SAAS,EAAEnB,MAAM,CAACoB,WAAY;IAAAC,QAAA,eAC/BnB,OAAA;MAAMoB,QAAQ,EAAEb,YAAa;MAAAY,QAAA,gBACjCnB,OAAA;QACIiB,SAAS,EAAEnB,MAAM,CAACuB,eAAgB;QAClCC,KAAK,EAAEjB,OAAQ;QACfkB,QAAQ,EAAGf,KAAK,IAAKF,UAAU,CAACE,KAAK,CAACgB,MAAM,CAACF,KAAK,CAAE;QACpDG,WAAW,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC,eACM7B,OAAA;QAAQ8B,IAAI,EAAC,QAAQ;QAACb,SAAS,EAAEnB,MAAM,CAACiC,aAAc;QAAAZ,QAAA,EAAC;MAEvD;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAAAzB,EAAA,CArCKH,YAAY;AAAA+B,EAAA,GAAZ/B,YAAY;AAuClB,eAAeA,YAAY;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}