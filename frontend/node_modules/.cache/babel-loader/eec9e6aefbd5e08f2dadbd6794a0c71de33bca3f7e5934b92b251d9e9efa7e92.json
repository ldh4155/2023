{"ast":null,"code":"import axios from \"axios\";\nimport { refreshAccessToken } from \"./reissue\";\nexport const api = axios.create({\n  baseURL: `http://localhost:8080/`\n});\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"access\");\n  if (token) {\n    config.headers[\"Authorization\"] = `Bearer ${token}`; // Authorization 헤더에 Bearer 토큰 설정\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\napi.interceptors.response.use(response => {\n  return response;\n}, async error => {\n  const originalRequest = error.config;\n  if (error.response && error.response.status === 401 && !originalRequest._retry) {\n    localStorage.removeItem('access');\n    originalRequest._retry = true;\n    try {\n      await refreshAccessToken();\n      const newAccessToken = localStorage.getItem('access');\n      api.defaults.headers.common['Authorization'] = `Bearer ${newAccessToken}`;\n      originalRequest.headers['Authorization'] = `Bearer ${newAccessToken}`; // 여기서 헤더를 직접 설정\n      return api(originalRequest);\n    } catch (refreshError) {\n      console.log(\"재발급 중 오류 발생:\", refreshError);\n      return Promise.reject(refreshError);\n    }\n  }\n  return Promise.reject(error);\n});","map":{"version":3,"names":["axios","refreshAccessToken","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","response","originalRequest","status","_retry","removeItem","newAccessToken","defaults","common","refreshError","console","log"],"sources":["C:/Users/KNUser/Desktop/TeamProject/frontend/src/api/api.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { refreshAccessToken } from \"./reissue\";\r\n\r\nexport const api = axios.create({\r\n  baseURL: `http://localhost:8080/`,\r\n});\r\n\r\napi.interceptors.request.use(\r\n  config => {\r\n    const token = localStorage.getItem(\"access\");\r\n    if (token) {\r\n      config.headers[\"Authorization\"] = `Bearer ${token}`; // Authorization 헤더에 Bearer 토큰 설정\r\n    }\r\n    return config;\r\n  },\r\n  error => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\napi.interceptors.response.use(\r\n  response => {\r\n    return response;\r\n  },\r\n  async error => {\r\n    const originalRequest = error.config;\r\n    if (error.response && error.response.status === 401 && !originalRequest._retry) {\r\n      localStorage.removeItem('access');\r\n      originalRequest._retry = true;\r\n      try {\r\n        await refreshAccessToken();\r\n        const newAccessToken = localStorage.getItem('access');\r\n        api.defaults.headers.common['Authorization'] = `Bearer ${newAccessToken}`;\r\n        originalRequest.headers['Authorization'] = `Bearer ${newAccessToken}`; // 여기서 헤더를 직접 설정\r\n        return api(originalRequest);\r\n      } catch (refreshError) {\r\n        console.log(\"재발급 중 오류 발생:\", refreshError);\r\n        return Promise.reject(refreshError);\r\n      }\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,kBAAkB,QAAQ,WAAW;AAE9C,OAAO,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC9BC,OAAO,EAAG;AACZ,CAAC,CAAC;AAEFF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAC1BC,MAAM,IAAI;EACR,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;EAC5C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,GAAI,UAASH,KAAM,EAAC,CAAC,CAAC;EACvD;EACA,OAAOD,MAAM;AACf,CAAC,EACDK,KAAK,IAAI;EACP,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAEDX,GAAG,CAACG,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC3BS,QAAQ,IAAI;EACV,OAAOA,QAAQ;AACjB,CAAC,EACD,MAAMH,KAAK,IAAI;EACb,MAAMI,eAAe,GAAGJ,KAAK,CAACL,MAAM;EACpC,IAAIK,KAAK,CAACG,QAAQ,IAAIH,KAAK,CAACG,QAAQ,CAACE,MAAM,KAAK,GAAG,IAAI,CAACD,eAAe,CAACE,MAAM,EAAE;IAC9ET,YAAY,CAACU,UAAU,CAAC,QAAQ,CAAC;IACjCH,eAAe,CAACE,MAAM,GAAG,IAAI;IAC7B,IAAI;MACF,MAAMlB,kBAAkB,CAAC,CAAC;MAC1B,MAAMoB,cAAc,GAAGX,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;MACrDT,GAAG,CAACoB,QAAQ,CAACV,OAAO,CAACW,MAAM,CAAC,eAAe,CAAC,GAAI,UAASF,cAAe,EAAC;MACzEJ,eAAe,CAACL,OAAO,CAAC,eAAe,CAAC,GAAI,UAASS,cAAe,EAAC,CAAC,CAAC;MACvE,OAAOnB,GAAG,CAACe,eAAe,CAAC;IAC7B,CAAC,CAAC,OAAOO,YAAY,EAAE;MACrBC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,YAAY,CAAC;MACzC,OAAOV,OAAO,CAACC,MAAM,CAACS,YAAY,CAAC;IACrC;EACF;EACA,OAAOV,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}