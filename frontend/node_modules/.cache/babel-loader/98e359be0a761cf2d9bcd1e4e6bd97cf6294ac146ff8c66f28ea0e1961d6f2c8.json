{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\2023TeamProject\\\\graduate\\\\frontend\\\\src\\\\page\\\\board\\\\Write.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport BoardInput from \"../../components/BoardInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Write(props) {\n  _s();\n  let token = localStorage.getItem('token');\n  const [board, setBoard] = useState({\n    title: \"\",\n    content: \"\",\n    images: [] // 게시글에 이미지 정보를 포함\n  });\n  const notFile = [];\n  const navigate = useNavigate();\n  function ChangeValue(event) {\n    setBoard({\n      ...board,\n      [event.target.name]: event.target.value\n    });\n    console.log(board);\n  }\n  function handleFileChange(event) {\n    setBoard({\n      ...board,\n      images: Array.from(event.target.files)\n    });\n    console.log(board);\n  }\n  function SubmitBoard(event) {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append(\"title\", board.title);\n    formData.append(\"content\", board.content);\n    board.images.forEach(image => formData.append(\"images\", image));\n    fetch(\"http://localhost:8080/board\", {\n      method: \"POST\",\n      body: formData\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      alert(\"게시글 작성에 성공하였습니다.\");\n      navigate(\"/board\");\n    }).catch(error => {\n      alert(\"게시글 작성에 실패하였습니다.\");\n      console.error(\"Error:\", error);\n    });\n  }\n\n  //input 분리\n  return /*#__PURE__*/_jsxDEV(BoardInput, {\n    SubmitBoard: SubmitBoard,\n    boardData: board,\n    ChangeValue: ChangeValue,\n    handleFileChange: handleFileChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(Write, \"ATH787aceLtZK3GQnFD586Ry5+0=\", false, function () {\n  return [useNavigate];\n});\n_c = Write;\nvar _c;\n$RefreshReg$(_c, \"Write\");","map":{"version":3,"names":["axios","React","useState","Link","useNavigate","BoardInput","jsxDEV","_jsxDEV","Write","props","_s","token","localStorage","getItem","board","setBoard","title","content","images","notFile","navigate","ChangeValue","event","target","name","value","console","log","handleFileChange","Array","from","files","SubmitBoard","preventDefault","formData","FormData","append","forEach","image","fetch","method","body","then","response","json","data","alert","catch","error","boardData","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/2023TeamProject/graduate/frontend/src/page/board/Write.js"],"sourcesContent":["import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport BoardInput from \"../../components/BoardInput\";\n\nexport default function Write(props) {\n  let token = localStorage.getItem('token');\n  const [board, setBoard] = useState({\n    title: \"\",\n    content: \"\",\n    images: [], // 게시글에 이미지 정보를 포함\n  });\n  const notFile = [];\n  const navigate = useNavigate();\n\n  function ChangeValue(event) {\n    setBoard({\n      ...board,\n      [event.target.name]: event.target.value,\n    });\n    console.log(board);\n  }\n\n  function handleFileChange(event) {\n    setBoard({\n      ...board,\n      images: Array.from(event.target.files),\n    });\n    console.log(board);\n  }\n\n  function SubmitBoard(event) {\n    event.preventDefault();\n\n    const formData = new FormData();\n    formData.append(\"title\", board.title);\n    formData.append(\"content\", board.content);\n\n    board.images.forEach((image) => formData.append(\"images\", image));\n\n    fetch(\"http://localhost:8080/board\", {\n      method: \"POST\",\n      body: formData,\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        alert(\"게시글 작성에 성공하였습니다.\");\n        navigate(\"/board\");\n      })\n      .catch((error) => {\n        alert(\"게시글 작성에 실패하였습니다.\");\n        console.error(\"Error:\", error);\n      });\n  }\n\n  //input 분리\n  return (\n    <BoardInput\n      SubmitBoard={SubmitBoard}\n      boardData={board}\n      ChangeValue={ChangeValue}\n      handleFileChange={handleFileChange}\n    />\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,OAAOC,UAAU,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,eAAe,SAASC,KAAKA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACnC,IAAIC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACzC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC;IACjCc,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE,EAAE;IACXC,MAAM,EAAE,EAAE,CAAE;EACd,CAAC,CAAC;EACF,MAAMC,OAAO,GAAG,EAAE;EAClB,MAAMC,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAE9B,SAASiB,WAAWA,CAACC,KAAK,EAAE;IAC1BP,QAAQ,CAAC;MACP,GAAGD,KAAK;MACR,CAACQ,KAAK,CAACC,MAAM,CAACC,IAAI,GAAGF,KAAK,CAACC,MAAM,CAACE;IACpC,CAAC,CAAC;IACFC,OAAO,CAACC,GAAG,CAACb,KAAK,CAAC;EACpB;EAEA,SAASc,gBAAgBA,CAACN,KAAK,EAAE;IAC/BP,QAAQ,CAAC;MACP,GAAGD,KAAK;MACRI,MAAM,EAAEW,KAAK,CAACC,IAAI,CAACR,KAAK,CAACC,MAAM,CAACQ,KAAK;IACvC,CAAC,CAAC;IACFL,OAAO,CAACC,GAAG,CAACb,KAAK,CAAC;EACpB;EAEA,SAASkB,WAAWA,CAACV,KAAK,EAAE;IAC1BA,KAAK,CAACW,cAAc,CAAC,CAAC;IAEtB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEtB,KAAK,CAACE,KAAK,CAAC;IACrCkB,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEtB,KAAK,CAACG,OAAO,CAAC;IAEzCH,KAAK,CAACI,MAAM,CAACmB,OAAO,CAAEC,KAAK,IAAKJ,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEE,KAAK,CAAC,CAAC;IAEjEC,KAAK,CAAC,6BAA6B,EAAE;MACnCC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEP;IACR,CAAC,CAAC,CACCQ,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdnB,OAAO,CAACC,GAAG,CAACkB,IAAI,CAAC;MACjBC,KAAK,CAAC,kBAAkB,CAAC;MACzB1B,QAAQ,CAAC,QAAQ,CAAC;IACpB,CAAC,CAAC,CACD2B,KAAK,CAAEC,KAAK,IAAK;MAChBF,KAAK,CAAC,kBAAkB,CAAC;MACzBpB,OAAO,CAACsB,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CAAC;EACN;;EAEA;EACA,oBACEzC,OAAA,CAACF,UAAU;IACT2B,WAAW,EAAEA,WAAY;IACzBiB,SAAS,EAAEnC,KAAM;IACjBO,WAAW,EAAEA,WAAY;IACzBO,gBAAgB,EAAEA;EAAiB;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEN;AAAC3C,EAAA,CA5DuBF,KAAK;EAAA,QAQVJ,WAAW;AAAA;AAAAkD,EAAA,GARN9C,KAAK;AAAA,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}