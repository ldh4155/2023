{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KNUser\\\\Desktop\\\\TeamProject\\\\frontend\\\\src\\\\page\\\\board\\\\Write.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport BoardInput from \"../../components/BoardInput\";\nimport { api } from \"../../api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Write(props) {\n  _s();\n  const [board, setBoard] = useState({\n    title: \"\",\n    content: \"\",\n    files: [],\n    category: \"\"\n  });\n  const [categories, setCategories] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    api.get(\"/categories\").then(response => {\n      setCategories(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching categories:\", error);\n    });\n  }, []);\n  function ChangeValue(event) {\n    setBoard({\n      ...board,\n      [event.target.name]: event.target.value\n    });\n    console.log(board);\n  }\n  function handleFileChange(event) {\n    setBoard({\n      ...board,\n      files: Array.from(event.target.files)\n    });\n    console.log(board);\n  }\n  function SubmitBoard(event) {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append(\"title\", board.title);\n    formData.append(\"content\", board.content);\n    formData.append(\"category\", board.category);\n    board.files.forEach(file => formData.append(\"files\", file));\n    api.post(`/board`, formData).then(data => {\n      console.log(data);\n      alert(\"게시글 작성에 성공하였습니다.\");\n      props.fetchBoards();\n      navigate(\"/board\");\n    }).catch(error => {\n      alert(\"게시글 작성에 실패하였습니다.\");\n      console.error(\"Error:\", error);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"category\",\n      value: board.category,\n      onChange: ChangeValue,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: category.id,\n        children: category.name\n      }, category.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BoardInput, {\n      SubmitBoard: SubmitBoard,\n      boardData: board,\n      ChangeValue: ChangeValue,\n      handleFileChange: handleFileChange,\n      newBoard: props.newBoard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(Write, \"S/r3WL8lFxYzwGKyF7qEf7gUyjI=\", false, function () {\n  return [useNavigate];\n});\n_c = Write;\nvar _c;\n$RefreshReg$(_c, \"Write\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","BoardInput","api","jsxDEV","_jsxDEV","Write","props","_s","board","setBoard","title","content","files","category","categories","setCategories","navigate","get","then","response","data","catch","error","console","ChangeValue","event","target","name","value","log","handleFileChange","Array","from","SubmitBoard","preventDefault","formData","FormData","append","forEach","file","post","alert","fetchBoards","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","id","boardData","newBoard","_c","$RefreshReg$"],"sources":["C:/Users/KNUser/Desktop/TeamProject/frontend/src/page/board/Write.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport BoardInput from \"../../components/BoardInput\";\r\nimport { api } from \"../../api/api\";\r\n\r\nexport default function Write(props) {\r\n  const [board, setBoard] = useState({\r\n    title: \"\",\r\n    content: \"\",\r\n    files: [],\r\n    category: \"\",\r\n  });\r\n\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    api.get(\"/categories\")\r\n      .then(response => {\r\n        setCategories(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error fetching categories:\", error);\r\n      });\r\n  }, []);\r\n\r\n  function ChangeValue(event) {\r\n    setBoard({\r\n      ...board,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n    console.log(board);\r\n  }\r\n\r\n  function handleFileChange(event) {\r\n    setBoard({\r\n      ...board,\r\n      files: Array.from(event.target.files),\r\n    });\r\n    console.log(board);\r\n  }\r\n\r\n  function SubmitBoard(event) {\r\n    event.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"title\", board.title);\r\n    formData.append(\"content\", board.content);\r\n    formData.append(\"category\", board.category);\r\n\r\n    board.files.forEach((file) => formData.append(\"files\", file));\r\n\r\n    api.post(`/board`, formData)\r\n      .then((data) => {\r\n        console.log(data);\r\n        alert(\"게시글 작성에 성공하였습니다.\");\r\n        props.fetchBoards();\r\n        navigate(\"/board\");\r\n      })\r\n      .catch((error) => {\r\n        alert(\"게시글 작성에 실패하였습니다.\");\r\n        console.error(\"Error:\", error);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <select name=\"category\" value={board.category} onChange={ChangeValue}>\r\n        <option value=\"\">Select Category</option>\r\n        {categories.map(category => (\r\n          <option key={category.id} value={category.id}>{category.name}</option>\r\n        ))}\r\n      </select>\r\n\r\n      <BoardInput\r\n        SubmitBoard={SubmitBoard}\r\n        boardData={board}\r\n        ChangeValue={ChangeValue}\r\n        handleFileChange={handleFileChange}\r\n        newBoard={props.newBoard}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}