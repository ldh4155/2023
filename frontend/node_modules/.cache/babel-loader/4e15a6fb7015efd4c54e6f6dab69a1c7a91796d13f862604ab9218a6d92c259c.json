{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\2023TeamProject\\\\graduate\\\\frontend\\\\src\\\\page\\\\sign\\\\FindPwd.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FindPwd = () => {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [id, setId] = useState(\"\");\n  const handleFindPwd = async e => {\n    e.preventDefault();\n    try {\n      const response = await api.post(`findpwd`, {\n        id,\n        name\n      });\n      if (response.status === 200) {\n        alert(\"이메일로 임시 비밀번호가 발송되었습니다.\");\n      } else {\n        alert(\"일치하는 회원이 없습니다. 이름과 아이디를 다시 확인해주세요.\");\n      }\n    } catch (error) {\n      alert(\"일치하는 회원이 없습니다. 이름과 아이디를 다시 확인해주세요.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uC784\\uC2DC \\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uAC00\\uC785\\uD558\\uC2E0 \\uC774\\uBA54\\uC77C\\uB85C \\uBCF4\\uB0B4\\uB4DC\\uB9BD\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFindPwd,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        placeholder: \"\\uAC00\\uC785\\uD55C \\uC774\\uB984\",\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: id,\n        placeholder: \"\\uC544\\uC774\\uB514\",\n        onChange: e => setId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uC784\\uC2DC \\uBE44\\uBC00\\uBC88\\uD638 \\uBC1C\\uAE09\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(FindPwd, \"xXs2MVz6MS+RkEX2VS1E+WjNh1I=\");\n_c = FindPwd;\nexport default FindPwd;\nvar _c;\n$RefreshReg$(_c, \"FindPwd\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","FindPwd","_s","name","setName","id","setId","handleFindPwd","e","preventDefault","response","api","post","status","alert","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","placeholder","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/user/2023TeamProject/graduate/frontend/src/page/sign/FindPwd.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst FindPwd = () => {\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [id, setId] = useState(\"\");\r\n\r\n    const handleFindPwd = async(e) => {\r\n        e.preventDefault();\r\n        \r\n        try {\r\n            const response = await api.post(`findpwd`, {id,name});\r\n\r\n            if(response.status === 200) {\r\n                alert(\"이메일로 임시 비밀번호가 발송되었습니다.\")\r\n            } else {\r\n                alert(\"일치하는 회원이 없습니다. 이름과 아이디를 다시 확인해주세요.\")\r\n            }\r\n        } catch (error) {\r\n            alert(\"일치하는 회원이 없습니다. 이름과 아이디를 다시 확인해주세요.\")\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <div>\r\n            <p>임시 비밀번호를 가입하신 이메일로 보내드립니다.</p>\r\n            <form onSubmit={handleFindPwd}>\r\n                <input type=\"text\" value={name} placeholder=\"가입한 이름\" onChange={(e) => setName(e.target.value)}/>\r\n                <input type=\"text\" value={id} placeholder=\"아이디\" onChange={(e) => setId(e.target.value)}/> \r\n                <button type=\"submit\">임시 비밀번호 발급</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\nexport default FindPwd;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAElB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACO,EAAE,EAAEC,KAAK,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEhC,MAAMS,aAAa,GAAG,MAAMC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,GAAG,CAACC,IAAI,CAAE,SAAQ,EAAE;QAACP,EAAE;QAACF;MAAI,CAAC,CAAC;MAErD,IAAGO,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;QACxBC,KAAK,CAAC,wBAAwB,CAAC;MACnC,CAAC,MAAM;QACHA,KAAK,CAAC,oCAAoC,CAAC;MAC/C;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZD,KAAK,CAAC,oCAAoC,CAAC;IAC/C;EAEJ,CAAC;EACD,oBACId,OAAA;IAAAgB,QAAA,gBACIhB,OAAA;MAAAgB,QAAA,EAAG;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACjCpB,OAAA;MAAMqB,QAAQ,EAAEd,aAAc;MAAAS,QAAA,gBAC1BhB,OAAA;QAAOsB,IAAI,EAAC,MAAM;QAACC,KAAK,EAAEpB,IAAK;QAACqB,WAAW,EAAC,iCAAQ;QAACC,QAAQ,EAAGjB,CAAC,IAAKJ,OAAO,CAACI,CAAC,CAACkB,MAAM,CAACH,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAChGpB,OAAA;QAAOsB,IAAI,EAAC,MAAM;QAACC,KAAK,EAAElB,EAAG;QAACmB,WAAW,EAAC,oBAAK;QAACC,QAAQ,EAAGjB,CAAC,IAAKF,KAAK,CAACE,CAAC,CAACkB,MAAM,CAACH,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACzFpB,OAAA;QAAQsB,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAAAlB,EAAA,CA/BKD,OAAO;AAAA0B,EAAA,GAAP1B,OAAO;AAgCb,eAAeA,OAAO;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}