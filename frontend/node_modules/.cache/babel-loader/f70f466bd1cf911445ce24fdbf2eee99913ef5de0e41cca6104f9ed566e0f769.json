{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\2023TeamProject\\\\graduate\\\\frontend\\\\src\\\\components\\\\Comment.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useState } from 'react';\nimport CommentWrite from \"./CommentWrite\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comment = ({\n  boardId,\n  comments\n}) => {\n  _s();\n  const [commentList, setCommentList] = useState(comments);\n  const [visible, setVisible] = useState(10);\n  const [editingId, setEditingId] = useState(null);\n  const [editComment, setEditComment] = useState({\n    id: null,\n    comment: null\n  });\n  const showMore = () => {\n    setVisible(prevValue => prevValue + 10);\n  };\n  const deleteComment = async id => {\n    try {\n      await axios.delete(`http://localhost:8080/board/${boardId}/comment/${id}`);\n      alert(\"삭제 성공\");\n      const newComments = commentList.filter(comment => comment.id !== id);\n      setCommentList(newComments);\n    } catch {\n      alert(\"삭제 실패\");\n    }\n  };\n  const updateComment = async editComment => {\n    try {\n      const response = await axios.put(`http://localhost:8080/board/${boardId}/comment/`, editComment);\n      setCommentList(commentList.map(comment => comment.id == response.data.id ? response.data : comment));\n      alert(\"수정 성공\");\n    } catch {\n      alert(\"수정 실패\");\n    }\n  };\n  const handleEditClick = id => {\n    setEditingId(id);\n  };\n  const newComment = newComment => {\n    setCommentList([...commentList, newComment]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CommentWrite, {\n      boardId: boardId,\n      newComment: newComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uB313\\uAE00\\xA0\", commentList.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }, this), commentList.slice(0, visible).map(comment => editingId == comment.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          defaultValue: comment.comment,\n          onChange: e => setEditComment({\n            id: editingId,\n            comment: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateComment(editComment),\n          children: \"\\uC800\\uC7A5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: comment.memberNickName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 19\n        }, this), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: comment.createTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 19\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEditClick(comment.id),\n          children: \"\\uC218\\uC815\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 19\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteComment(comment.id),\n          children: \"\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 19\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)), visible < commentList.length && /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: showMore,\n        children: \"\\uB354\\uBCF4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(Comment, \"DS2PNmEM0Hp8OcB6Bu5/Y3RJepo=\");\n_c = Comment;\nexport default Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["axios","React","useState","CommentWrite","jsxDEV","_jsxDEV","Comment","boardId","comments","_s","commentList","setCommentList","visible","setVisible","editingId","setEditingId","editComment","setEditComment","id","comment","showMore","prevValue","deleteComment","delete","alert","newComments","filter","updateComment","response","put","map","data","handleEditClick","newComment","children","fileName","_jsxFileName","lineNumber","columnNumber","length","slice","type","defaultValue","onChange","e","target","value","onClick","memberNickName","createTime","content","_c","$RefreshReg$"],"sources":["C:/Users/user/2023TeamProject/graduate/frontend/src/components/Comment.js"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useState } from 'react';\r\nimport CommentWrite from \"./CommentWrite\";\r\n\r\nconst Comment = ({boardId, comments}) => {\r\n\r\n    const [commentList, setCommentList] = useState(comments);\r\n    const [visible,setVisible] = useState(10);\r\n    const [editingId,setEditingId] = useState(null);\r\n    const [editComment, setEditComment] = useState({\r\n        id: null,\r\n        comment: null\r\n    });\r\n    \r\n    const showMore = () => {\r\n        setVisible((prevValue) => prevValue + 10);\r\n    }\r\n\r\n    const deleteComment = async(id) => {\r\n        try {\r\n            await axios.delete(`http://localhost:8080/board/${boardId}/comment/${id}`)\r\n            alert(\"삭제 성공\")\r\n\r\n            const newComments = commentList.filter(comment => comment.id !== id);\r\n            setCommentList(newComments);\r\n        } catch {\r\n            alert(\"삭제 실패\")\r\n        }\r\n    }\r\n\r\n    const updateComment = async (editComment) => {\r\n        try {\r\n            const response = await axios.put(`http://localhost:8080/board/${boardId}/comment/`,editComment)\r\n            setCommentList(commentList.map(comment =>\r\n                comment.id == response.data.id ? response.data : comment));\r\n\r\n            alert(\"수정 성공\")\r\n        }catch {\r\n            alert(\"수정 실패\")\r\n        }\r\n    }\r\n\r\n    const handleEditClick = (id) => {\r\n        setEditingId(id);\r\n    }\r\n\r\n    const newComment = (newComment) => {\r\n        setCommentList([...commentList, newComment]);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <CommentWrite boardId={boardId} newComment={newComment}/>\r\n           <div>\r\n              <p>댓글&nbsp;{commentList.length}</p>\r\n              {commentList.slice(0,visible).map((comment) => \r\n                editingId == comment.id ? (\r\n                  <div>\r\n                    <input type=\"text\" defaultValue={comment.comment} \r\n                      onChange={(e) => setEditComment({id: editingId, comment: e.target.value})}/>\r\n                    <button onClick={() => updateComment(editComment)}>저장</button>\r\n                  </div>\r\n               ) : (\r\n                <div key={comment.id}>\r\n                  <span>{comment.memberNickName}</span>&nbsp;&nbsp;&nbsp;\r\n                  <span>{comment.createTime}</span>&nbsp;\r\n                  <button onClick={() => handleEditClick(comment.id)}>수정</button>&nbsp;\r\n                  <button onClick={() => deleteComment(comment.id)}>삭제</button>\r\n                  <p>{comment.content}</p>\r\n                </div>\r\n            ))}\r\n            {visible < commentList.length && (\r\n                <p onClick={showMore}>더보기</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Comment;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}